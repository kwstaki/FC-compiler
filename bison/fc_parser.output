Terminals unused in grammar

   ERROR_MESSAGE
   KW_DO
   KW_NOT
   OP_NOT
   KW_DIV


Grammar

    0 $accept: program TK_EOF

    1 program: variable_declaration function_declaration main_decl

    2 variable_declaration: %empty
    3                     | variable_declaration data_types OP_SEMICOLON

    4 data_types: basic_data_type IDENTIFIER
    5           | data_types OP_COMMA IDENTIFIER
    6           | matrix_decl
    7           | comp
    8           | static_comp

    9 function_declaration: %empty
   10                     | header func_body function_declaration

   11 main_decl: KW_MAIN OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS func_body

   12 header: basic_data_type IDENTIFIER OP_LEFT_PARENTHESIS parameters OP_RIGHT_PARENTHESIS
   13       | KW_VOID IDENTIFIER OP_LEFT_PARENTHESIS parameters OP_RIGHT_PARENTHESIS

   14 func_body: KW_BEGIN body_code comm2 KW_END

   15 body_code: %empty
   16          | func_data_types OP_SEMICOLON body_code

   17 func_data_types: basic_data_type IDENTIFIER
   18                | func_data_types OP_COMMA IDENTIFIER
   19                | basic_data_type IDENTIFIER OP_ASSIGNMENT sinplin const
   20                | func_data_types OP_COMMA IDENTIFIER OP_ASSIGNMENT sinplin const

   21 parameters: basic_data_type IDENTIFIER
   22           | parameters OP_COMMA basic_data_type IDENTIFIER

   23 matrix_decl: basic_data_type IDENTIFIER multi_bracket
   24            | data_types OP_COMMA IDENTIFIER multi_bracket

   25 comp: basic_data_type IDENTIFIER OP_ASSIGNMENT sinplin const
   26     | data_types OP_COMMA IDENTIFIER OP_ASSIGNMENT sinplin const

   27 static_comp: KW_STATIC basic_data_type IDENTIFIER OP_ASSIGNMENT sinplin const

   28 multi_bracket: OP_LEFT_BRACKET POSITIVEINT OP_RIGHT_BRACKET
   29              | multi_bracket OP_LEFT_BRACKET POSITIVEINT OP_RIGHT_BRACKET

   30 basic_data_type: KW_INTEGER
   31                | KW_BOOLEAN
   32                | KW_CHARACTER
   33                | KW_REAL
   34                | KW_STRING

   35 sinplin: %empty
   36        | OP_PLUS
   37        | OP_MINUS

   38 const: REAL
   39      | POSITIVEINT
   40      | KW_TRUE
   41      | KW_FALSE

   42 command: simple_command
   43        | complex_command

   44 comm2: %empty
   45      | simple_command comm2

   46 simple_command: OP_SEMICOLON
   47               | IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON
   48               | command_if
   49               | command_for
   50               | command_while
   51               | readString_command
   52               | readInteger_command
   53               | readReal_command
   54               | writeString_command
   55               | writeInteger_command
   56               | writeReal_command
   57               | KW_BREAK OP_SEMICOLON
   58               | KW_CONTINUE OP_SEMICOLON
   59               | KW_RETURN expression OP_SEMICOLON
   60               | IDENTIFIER OP_LEFT_PARENTHESIS function_variables OP_RIGHT_PARENTHESIS OP_SEMICOLON

   61 complex_command: KW_BEGIN comm2 KW_END

   62 command_if: KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   63           | KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command
   64           | KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE command

   65 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command

   67 command_while: KW_WHILE OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command

   68 function_variables: %empty
   69                   | constant
   70                   | constant OP_COMMA function_variables

   71 expression: constant
   72           | OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | expression OP_PLUS expression
   74           | expression OP_MINUS expression
   75           | expression OP_MULT expression
   76           | expression OP_DIV expression
   77           | expression KW_MOD expression
   78           | expression OP_OR expression
   79           | expression KW_OR expression
   80           | expression OP_AND expression
   81           | expression KW_AND expression
   82           | expression OP_EQUAL expression
   83           | expression OP_NOTEQUAL expression
   84           | expression OP_LESS expression
   85           | expression OP_GREATER expression
   86           | expression OP_LESSOREQUAL expression
   87           | expression OP_GREATEROREQUAL expression
   88           | OP_PLUS expression
   89           | OP_MINUS expression
   90           | IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | KW_TRUE
   93           | KW_FALSE

   94 multi_exp_bracket: %empty
   95                  | OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket

   96 constant: POSITIVEINT
   97         | REAL
   98         | IDENTIFIER

   99 readString_command: IDENTIFIER OP_ASSIGNMENT KW_READSTRING OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON

  100 readInteger_command: IDENTIFIER OP_ASSIGNMENT KW_READINTEGER OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON

  101 readReal_command: IDENTIFIER OP_ASSIGNMENT KW_READREAL OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON

  102 writeString_command: KW_WRITESTRING OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON
  103                    | KW_WRITESTRING OP_LEFT_PARENTHESIS CONSTANT_STRING OP_RIGHT_PARENTHESIS OP_SEMICOLON

  104 writeInteger_command: KW_WRITEINTEGER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS OP_SEMICOLON

  105 writeReal_command: KW_WRITEREAL OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON


Terminals, with rules where they appear

TK_EOF (0) 0
error (256)
ERROR_MESSAGE (258)
KW_STATIC (259) 27
KW_TRUE (260) 40 92
KW_FALSE (261) 41 93
KW_DO (262)
KW_IF (263) 62 63 64
KW_NOT (264)
KW_BOOLEAN (265) 31
KW_BREAK (266) 57
KW_ELSE (267) 64
KW_AND (268) 81
KW_INTEGER (269) 30
KW_STRING (270) 34
KW_CONTINUE (271) 58
KW_FOR (272) 65 66
KW_MOD (273) 77
KW_CHARACTER (274) 32
KW_VOID (275) 13
KW_RETURN (276) 59
KW_END (277) 14 61
KW_BEGIN (278) 14 61
KW_REAL (279) 33
KW_WHILE (280) 67
KW_OR (281) 79
KW_MAIN (282) 11
KW_READSTRING (283) 99
KW_READINTEGER (284) 100
KW_READREAL (285) 101
KW_WRITESTRING (286) 102 103
KW_WRITEINTEGER (287) 104
KW_WRITEREAL (288) 105
IDENTIFIER (289) 4 5 12 13 17 18 19 20 21 22 23 24 25 26 27 47 60 65
    66 90 91 98 99 100 101 102 105
CONSTANT_STRING (290) 103
POSITIVEINT (291) 28 29 39 96
REAL (292) 38 97
OP_PLUS (293) 36 73 88
OP_MINUS (294) 37 74 89
OP_MULT (295) 75
OP_DIV (296) 76
OP_EQUAL (297) 82
OP_NOTEQUAL (298) 83
OP_LESS (299) 84
OP_LESSOREQUAL (300) 86
OP_GREATER (301) 85
OP_GREATEROREQUAL (302) 87
OP_ASSIGNMENT (303) 19 20 25 26 27 47 65 66 99 100 101
OP_SEMICOLON (304) 3 16 46 47 57 58 59 60 65 66 99 100 101 102 103
    104 105
OP_LEFT_PARENTHESIS (305) 11 12 13 60 62 63 64 65 66 67 72 90 99 100
    101 102 103 104 105
OP_RIGHT_PARENTHESIS (306) 11 12 13 60 62 63 64 65 66 67 72 90 99 100
    101 102 103 104 105
OP_COMMA (307) 5 18 20 22 24 26 70
OP_LEFT_BRACKET (308) 28 29 91 95
OP_RIGHT_BRACKET (309) 28 29 91 95
OP_AND (310) 80
OP_OR (311) 78
OP_NOT (312)
KW_DIV (313)
KW_THEN (314) 63 64


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
program (61)
    on left: 1, on right: 0
variable_declaration (62)
    on left: 2 3, on right: 1 3
data_types (63)
    on left: 4 5 6 7 8, on right: 3 5 24 26
function_declaration (64)
    on left: 9 10, on right: 1 10
main_decl (65)
    on left: 11, on right: 1
header (66)
    on left: 12 13, on right: 10
func_body (67)
    on left: 14, on right: 10 11
body_code (68)
    on left: 15 16, on right: 14 16
func_data_types (69)
    on left: 17 18 19 20, on right: 16 18 20
parameters (70)
    on left: 21 22, on right: 12 13 22
matrix_decl (71)
    on left: 23 24, on right: 6
comp (72)
    on left: 25 26, on right: 7
static_comp (73)
    on left: 27, on right: 8
multi_bracket (74)
    on left: 28 29, on right: 23 24 29
basic_data_type (75)
    on left: 30 31 32 33 34, on right: 4 12 17 19 21 22 23 25 27
sinplin (76)
    on left: 35 36 37, on right: 19 20 25 26 27
const (77)
    on left: 38 39 40 41, on right: 19 20 25 26 27
command (78)
    on left: 42 43, on right: 62 63 64 65 66 67
comm2 (79)
    on left: 44 45, on right: 14 45 61
simple_command (80)
    on left: 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60, on right:
    42 45
complex_command (81)
    on left: 61, on right: 43
command_if (82)
    on left: 62 63 64, on right: 48
command_for (83)
    on left: 65 66, on right: 49
command_while (84)
    on left: 67, on right: 50
function_variables (85)
    on left: 68 69 70, on right: 60 70
expression (86)
    on left: 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88
    89 90 91 92 93, on right: 47 59 62 63 64 65 66 67 72 73 74 75 76
    77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 95 104
multi_exp_bracket (87)
    on left: 94 95, on right: 91 95
constant (88)
    on left: 96 97 98, on right: 69 70 71
readString_command (89)
    on left: 99, on right: 51
readInteger_command (90)
    on left: 100, on right: 52
readReal_command (91)
    on left: 101, on right: 53
writeString_command (92)
    on left: 102 103, on right: 54
writeInteger_command (93)
    on left: 104, on right: 55
writeReal_command (94)
    on left: 105, on right: 56


State 0

    0 $accept: . program TK_EOF
    1 program: . variable_declaration function_declaration main_decl
    2 variable_declaration: . %empty
    3                     | . variable_declaration data_types OP_SEMICOLON

    $default  reduce using rule 2 (variable_declaration)

    program               go to state 1
    variable_declaration  go to state 2


State 1

    0 $accept: program . TK_EOF

    TK_EOF  shift, and go to state 3


State 2

    1 program: variable_declaration . function_declaration main_decl
    3 variable_declaration: variable_declaration . data_types OP_SEMICOLON
    4 data_types: . basic_data_type IDENTIFIER
    5           | . data_types OP_COMMA IDENTIFIER
    6           | . matrix_decl
    7           | . comp
    8           | . static_comp
    9 function_declaration: . %empty  [KW_MAIN]
   10                     | . header func_body function_declaration
   12 header: . basic_data_type IDENTIFIER OP_LEFT_PARENTHESIS parameters OP_RIGHT_PARENTHESIS
   13       | . KW_VOID IDENTIFIER OP_LEFT_PARENTHESIS parameters OP_RIGHT_PARENTHESIS
   23 matrix_decl: . basic_data_type IDENTIFIER multi_bracket
   24            | . data_types OP_COMMA IDENTIFIER multi_bracket
   25 comp: . basic_data_type IDENTIFIER OP_ASSIGNMENT sinplin const
   26     | . data_types OP_COMMA IDENTIFIER OP_ASSIGNMENT sinplin const
   27 static_comp: . KW_STATIC basic_data_type IDENTIFIER OP_ASSIGNMENT sinplin const
   30 basic_data_type: . KW_INTEGER
   31                | . KW_BOOLEAN
   32                | . KW_CHARACTER
   33                | . KW_REAL
   34                | . KW_STRING

    KW_STATIC     shift, and go to state 4
    KW_BOOLEAN    shift, and go to state 5
    KW_INTEGER    shift, and go to state 6
    KW_STRING     shift, and go to state 7
    KW_CHARACTER  shift, and go to state 8
    KW_VOID       shift, and go to state 9
    KW_REAL       shift, and go to state 10

    $default  reduce using rule 9 (function_declaration)

    data_types            go to state 11
    function_declaration  go to state 12
    header                go to state 13
    matrix_decl           go to state 14
    comp                  go to state 15
    static_comp           go to state 16
    basic_data_type       go to state 17


State 3

    0 $accept: program TK_EOF .

    $default  accept


State 4

   27 static_comp: KW_STATIC . basic_data_type IDENTIFIER OP_ASSIGNMENT sinplin const
   30 basic_data_type: . KW_INTEGER
   31                | . KW_BOOLEAN
   32                | . KW_CHARACTER
   33                | . KW_REAL
   34                | . KW_STRING

    KW_BOOLEAN    shift, and go to state 5
    KW_INTEGER    shift, and go to state 6
    KW_STRING     shift, and go to state 7
    KW_CHARACTER  shift, and go to state 8
    KW_REAL       shift, and go to state 10

    basic_data_type  go to state 18


State 5

   31 basic_data_type: KW_BOOLEAN .

    $default  reduce using rule 31 (basic_data_type)


State 6

   30 basic_data_type: KW_INTEGER .

    $default  reduce using rule 30 (basic_data_type)


State 7

   34 basic_data_type: KW_STRING .

    $default  reduce using rule 34 (basic_data_type)


State 8

   32 basic_data_type: KW_CHARACTER .

    $default  reduce using rule 32 (basic_data_type)


State 9

   13 header: KW_VOID . IDENTIFIER OP_LEFT_PARENTHESIS parameters OP_RIGHT_PARENTHESIS

    IDENTIFIER  shift, and go to state 19


State 10

   33 basic_data_type: KW_REAL .

    $default  reduce using rule 33 (basic_data_type)


State 11

    3 variable_declaration: variable_declaration data_types . OP_SEMICOLON
    5 data_types: data_types . OP_COMMA IDENTIFIER
   24 matrix_decl: data_types . OP_COMMA IDENTIFIER multi_bracket
   26 comp: data_types . OP_COMMA IDENTIFIER OP_ASSIGNMENT sinplin const

    OP_SEMICOLON  shift, and go to state 20
    OP_COMMA      shift, and go to state 21


State 12

    1 program: variable_declaration function_declaration . main_decl
   11 main_decl: . KW_MAIN OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS func_body

    KW_MAIN  shift, and go to state 22

    main_decl  go to state 23


State 13

   10 function_declaration: header . func_body function_declaration
   14 func_body: . KW_BEGIN body_code comm2 KW_END

    KW_BEGIN  shift, and go to state 24

    func_body  go to state 25


State 14

    6 data_types: matrix_decl .

    $default  reduce using rule 6 (data_types)


State 15

    7 data_types: comp .

    $default  reduce using rule 7 (data_types)


State 16

    8 data_types: static_comp .

    $default  reduce using rule 8 (data_types)


State 17

    4 data_types: basic_data_type . IDENTIFIER
   12 header: basic_data_type . IDENTIFIER OP_LEFT_PARENTHESIS parameters OP_RIGHT_PARENTHESIS
   23 matrix_decl: basic_data_type . IDENTIFIER multi_bracket
   25 comp: basic_data_type . IDENTIFIER OP_ASSIGNMENT sinplin const

    IDENTIFIER  shift, and go to state 26


State 18

   27 static_comp: KW_STATIC basic_data_type . IDENTIFIER OP_ASSIGNMENT sinplin const

    IDENTIFIER  shift, and go to state 27


State 19

   13 header: KW_VOID IDENTIFIER . OP_LEFT_PARENTHESIS parameters OP_RIGHT_PARENTHESIS

    OP_LEFT_PARENTHESIS  shift, and go to state 28


State 20

    3 variable_declaration: variable_declaration data_types OP_SEMICOLON .

    $default  reduce using rule 3 (variable_declaration)


State 21

    5 data_types: data_types OP_COMMA . IDENTIFIER
   24 matrix_decl: data_types OP_COMMA . IDENTIFIER multi_bracket
   26 comp: data_types OP_COMMA . IDENTIFIER OP_ASSIGNMENT sinplin const

    IDENTIFIER  shift, and go to state 29


State 22

   11 main_decl: KW_MAIN . OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS func_body

    OP_LEFT_PARENTHESIS  shift, and go to state 30


State 23

    1 program: variable_declaration function_declaration main_decl .

    $default  reduce using rule 1 (program)


State 24

   14 func_body: KW_BEGIN . body_code comm2 KW_END
   15 body_code: . %empty  [KW_IF, KW_BREAK, KW_CONTINUE, KW_FOR, KW_RETURN, KW_END, KW_WHILE, KW_WRITESTRING, KW_WRITEINTEGER, KW_WRITEREAL, IDENTIFIER, OP_SEMICOLON]
   16          | . func_data_types OP_SEMICOLON body_code
   17 func_data_types: . basic_data_type IDENTIFIER
   18                | . func_data_types OP_COMMA IDENTIFIER
   19                | . basic_data_type IDENTIFIER OP_ASSIGNMENT sinplin const
   20                | . func_data_types OP_COMMA IDENTIFIER OP_ASSIGNMENT sinplin const
   30 basic_data_type: . KW_INTEGER
   31                | . KW_BOOLEAN
   32                | . KW_CHARACTER
   33                | . KW_REAL
   34                | . KW_STRING

    KW_BOOLEAN    shift, and go to state 5
    KW_INTEGER    shift, and go to state 6
    KW_STRING     shift, and go to state 7
    KW_CHARACTER  shift, and go to state 8
    KW_REAL       shift, and go to state 10

    $default  reduce using rule 15 (body_code)

    body_code        go to state 31
    func_data_types  go to state 32
    basic_data_type  go to state 33


State 25

    9 function_declaration: . %empty  [KW_MAIN]
   10                     | . header func_body function_declaration
   10                     | header func_body . function_declaration
   12 header: . basic_data_type IDENTIFIER OP_LEFT_PARENTHESIS parameters OP_RIGHT_PARENTHESIS
   13       | . KW_VOID IDENTIFIER OP_LEFT_PARENTHESIS parameters OP_RIGHT_PARENTHESIS
   30 basic_data_type: . KW_INTEGER
   31                | . KW_BOOLEAN
   32                | . KW_CHARACTER
   33                | . KW_REAL
   34                | . KW_STRING

    KW_BOOLEAN    shift, and go to state 5
    KW_INTEGER    shift, and go to state 6
    KW_STRING     shift, and go to state 7
    KW_CHARACTER  shift, and go to state 8
    KW_VOID       shift, and go to state 9
    KW_REAL       shift, and go to state 10

    $default  reduce using rule 9 (function_declaration)

    function_declaration  go to state 34
    header                go to state 13
    basic_data_type       go to state 35


State 26

    4 data_types: basic_data_type IDENTIFIER .  [OP_SEMICOLON, OP_COMMA]
   12 header: basic_data_type IDENTIFIER . OP_LEFT_PARENTHESIS parameters OP_RIGHT_PARENTHESIS
   23 matrix_decl: basic_data_type IDENTIFIER . multi_bracket
   25 comp: basic_data_type IDENTIFIER . OP_ASSIGNMENT sinplin const
   28 multi_bracket: . OP_LEFT_BRACKET POSITIVEINT OP_RIGHT_BRACKET
   29              | . multi_bracket OP_LEFT_BRACKET POSITIVEINT OP_RIGHT_BRACKET

    OP_ASSIGNMENT        shift, and go to state 36
    OP_LEFT_PARENTHESIS  shift, and go to state 37
    OP_LEFT_BRACKET      shift, and go to state 38

    $default  reduce using rule 4 (data_types)

    multi_bracket  go to state 39


State 27

   27 static_comp: KW_STATIC basic_data_type IDENTIFIER . OP_ASSIGNMENT sinplin const

    OP_ASSIGNMENT  shift, and go to state 40


State 28

   13 header: KW_VOID IDENTIFIER OP_LEFT_PARENTHESIS . parameters OP_RIGHT_PARENTHESIS
   21 parameters: . basic_data_type IDENTIFIER
   22           | . parameters OP_COMMA basic_data_type IDENTIFIER
   30 basic_data_type: . KW_INTEGER
   31                | . KW_BOOLEAN
   32                | . KW_CHARACTER
   33                | . KW_REAL
   34                | . KW_STRING

    KW_BOOLEAN    shift, and go to state 5
    KW_INTEGER    shift, and go to state 6
    KW_STRING     shift, and go to state 7
    KW_CHARACTER  shift, and go to state 8
    KW_REAL       shift, and go to state 10

    parameters       go to state 41
    basic_data_type  go to state 42


State 29

    5 data_types: data_types OP_COMMA IDENTIFIER .  [OP_SEMICOLON, OP_COMMA]
   24 matrix_decl: data_types OP_COMMA IDENTIFIER . multi_bracket
   26 comp: data_types OP_COMMA IDENTIFIER . OP_ASSIGNMENT sinplin const
   28 multi_bracket: . OP_LEFT_BRACKET POSITIVEINT OP_RIGHT_BRACKET
   29              | . multi_bracket OP_LEFT_BRACKET POSITIVEINT OP_RIGHT_BRACKET

    OP_ASSIGNMENT    shift, and go to state 43
    OP_LEFT_BRACKET  shift, and go to state 38

    $default  reduce using rule 5 (data_types)

    multi_bracket  go to state 44


State 30

   11 main_decl: KW_MAIN OP_LEFT_PARENTHESIS . OP_RIGHT_PARENTHESIS func_body

    OP_RIGHT_PARENTHESIS  shift, and go to state 45


State 31

   14 func_body: KW_BEGIN body_code . comm2 KW_END
   44 comm2: . %empty  [KW_END]
   45      | . simple_command comm2
   46 simple_command: . OP_SEMICOLON
   47               | . IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON
   48               | . command_if
   49               | . command_for
   50               | . command_while
   51               | . readString_command
   52               | . readInteger_command
   53               | . readReal_command
   54               | . writeString_command
   55               | . writeInteger_command
   56               | . writeReal_command
   57               | . KW_BREAK OP_SEMICOLON
   58               | . KW_CONTINUE OP_SEMICOLON
   59               | . KW_RETURN expression OP_SEMICOLON
   60               | . IDENTIFIER OP_LEFT_PARENTHESIS function_variables OP_RIGHT_PARENTHESIS OP_SEMICOLON
   62 command_if: . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   63           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command
   64           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE command
   65 command_for: . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   67 command_while: . KW_WHILE OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   99 readString_command: . IDENTIFIER OP_ASSIGNMENT KW_READSTRING OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  100 readInteger_command: . IDENTIFIER OP_ASSIGNMENT KW_READINTEGER OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  101 readReal_command: . IDENTIFIER OP_ASSIGNMENT KW_READREAL OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  102 writeString_command: . KW_WRITESTRING OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON
  103                    | . KW_WRITESTRING OP_LEFT_PARENTHESIS CONSTANT_STRING OP_RIGHT_PARENTHESIS OP_SEMICOLON
  104 writeInteger_command: . KW_WRITEINTEGER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS OP_SEMICOLON
  105 writeReal_command: . KW_WRITEREAL OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON

    KW_IF            shift, and go to state 46
    KW_BREAK         shift, and go to state 47
    KW_CONTINUE      shift, and go to state 48
    KW_FOR           shift, and go to state 49
    KW_RETURN        shift, and go to state 50
    KW_WHILE         shift, and go to state 51
    KW_WRITESTRING   shift, and go to state 52
    KW_WRITEINTEGER  shift, and go to state 53
    KW_WRITEREAL     shift, and go to state 54
    IDENTIFIER       shift, and go to state 55
    OP_SEMICOLON     shift, and go to state 56

    $default  reduce using rule 44 (comm2)

    comm2                 go to state 57
    simple_command        go to state 58
    command_if            go to state 59
    command_for           go to state 60
    command_while         go to state 61
    readString_command    go to state 62
    readInteger_command   go to state 63
    readReal_command      go to state 64
    writeString_command   go to state 65
    writeInteger_command  go to state 66
    writeReal_command     go to state 67


State 32

   16 body_code: func_data_types . OP_SEMICOLON body_code
   18 func_data_types: func_data_types . OP_COMMA IDENTIFIER
   20                | func_data_types . OP_COMMA IDENTIFIER OP_ASSIGNMENT sinplin const

    OP_SEMICOLON  shift, and go to state 68
    OP_COMMA      shift, and go to state 69


State 33

   17 func_data_types: basic_data_type . IDENTIFIER
   19                | basic_data_type . IDENTIFIER OP_ASSIGNMENT sinplin const

    IDENTIFIER  shift, and go to state 70


State 34

   10 function_declaration: header func_body function_declaration .

    $default  reduce using rule 10 (function_declaration)


State 35

   12 header: basic_data_type . IDENTIFIER OP_LEFT_PARENTHESIS parameters OP_RIGHT_PARENTHESIS

    IDENTIFIER  shift, and go to state 71


State 36

   25 comp: basic_data_type IDENTIFIER OP_ASSIGNMENT . sinplin const
   35 sinplin: . %empty  [KW_TRUE, KW_FALSE, POSITIVEINT, REAL]
   36        | . OP_PLUS
   37        | . OP_MINUS

    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73

    $default  reduce using rule 35 (sinplin)

    sinplin  go to state 74


State 37

   12 header: basic_data_type IDENTIFIER OP_LEFT_PARENTHESIS . parameters OP_RIGHT_PARENTHESIS
   21 parameters: . basic_data_type IDENTIFIER
   22           | . parameters OP_COMMA basic_data_type IDENTIFIER
   30 basic_data_type: . KW_INTEGER
   31                | . KW_BOOLEAN
   32                | . KW_CHARACTER
   33                | . KW_REAL
   34                | . KW_STRING

    KW_BOOLEAN    shift, and go to state 5
    KW_INTEGER    shift, and go to state 6
    KW_STRING     shift, and go to state 7
    KW_CHARACTER  shift, and go to state 8
    KW_REAL       shift, and go to state 10

    parameters       go to state 75
    basic_data_type  go to state 42


State 38

   28 multi_bracket: OP_LEFT_BRACKET . POSITIVEINT OP_RIGHT_BRACKET

    POSITIVEINT  shift, and go to state 76


State 39

   23 matrix_decl: basic_data_type IDENTIFIER multi_bracket .  [OP_SEMICOLON, OP_COMMA]
   29 multi_bracket: multi_bracket . OP_LEFT_BRACKET POSITIVEINT OP_RIGHT_BRACKET

    OP_LEFT_BRACKET  shift, and go to state 77

    $default  reduce using rule 23 (matrix_decl)


State 40

   27 static_comp: KW_STATIC basic_data_type IDENTIFIER OP_ASSIGNMENT . sinplin const
   35 sinplin: . %empty  [KW_TRUE, KW_FALSE, POSITIVEINT, REAL]
   36        | . OP_PLUS
   37        | . OP_MINUS

    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73

    $default  reduce using rule 35 (sinplin)

    sinplin  go to state 78


State 41

   13 header: KW_VOID IDENTIFIER OP_LEFT_PARENTHESIS parameters . OP_RIGHT_PARENTHESIS
   22 parameters: parameters . OP_COMMA basic_data_type IDENTIFIER

    OP_RIGHT_PARENTHESIS  shift, and go to state 79
    OP_COMMA              shift, and go to state 80


State 42

   21 parameters: basic_data_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 81


State 43

   26 comp: data_types OP_COMMA IDENTIFIER OP_ASSIGNMENT . sinplin const
   35 sinplin: . %empty  [KW_TRUE, KW_FALSE, POSITIVEINT, REAL]
   36        | . OP_PLUS
   37        | . OP_MINUS

    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73

    $default  reduce using rule 35 (sinplin)

    sinplin  go to state 82


State 44

   24 matrix_decl: data_types OP_COMMA IDENTIFIER multi_bracket .  [OP_SEMICOLON, OP_COMMA]
   29 multi_bracket: multi_bracket . OP_LEFT_BRACKET POSITIVEINT OP_RIGHT_BRACKET

    OP_LEFT_BRACKET  shift, and go to state 77

    $default  reduce using rule 24 (matrix_decl)


State 45

   11 main_decl: KW_MAIN OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS . func_body
   14 func_body: . KW_BEGIN body_code comm2 KW_END

    KW_BEGIN  shift, and go to state 24

    func_body  go to state 83


State 46

   62 command_if: KW_IF . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   63           | KW_IF . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command
   64           | KW_IF . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE command

    OP_LEFT_PARENTHESIS  shift, and go to state 84


State 47

   57 simple_command: KW_BREAK . OP_SEMICOLON

    OP_SEMICOLON  shift, and go to state 85


State 48

   58 simple_command: KW_CONTINUE . OP_SEMICOLON

    OP_SEMICOLON  shift, and go to state 86


State 49

   65 command_for: KW_FOR . OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | KW_FOR . OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command

    OP_LEFT_PARENTHESIS  shift, and go to state 87


State 50

   59 simple_command: KW_RETURN . expression OP_SEMICOLON
   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 96
    constant    go to state 97


State 51

   67 command_while: KW_WHILE . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command

    OP_LEFT_PARENTHESIS  shift, and go to state 98


State 52

  102 writeString_command: KW_WRITESTRING . OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON
  103                    | KW_WRITESTRING . OP_LEFT_PARENTHESIS CONSTANT_STRING OP_RIGHT_PARENTHESIS OP_SEMICOLON

    OP_LEFT_PARENTHESIS  shift, and go to state 99


State 53

  104 writeInteger_command: KW_WRITEINTEGER . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS OP_SEMICOLON

    OP_LEFT_PARENTHESIS  shift, and go to state 100


State 54

  105 writeReal_command: KW_WRITEREAL . OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON

    OP_LEFT_PARENTHESIS  shift, and go to state 101


State 55

   47 simple_command: IDENTIFIER . OP_ASSIGNMENT expression OP_SEMICOLON
   60               | IDENTIFIER . OP_LEFT_PARENTHESIS function_variables OP_RIGHT_PARENTHESIS OP_SEMICOLON
   99 readString_command: IDENTIFIER . OP_ASSIGNMENT KW_READSTRING OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  100 readInteger_command: IDENTIFIER . OP_ASSIGNMENT KW_READINTEGER OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  101 readReal_command: IDENTIFIER . OP_ASSIGNMENT KW_READREAL OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON

    OP_ASSIGNMENT        shift, and go to state 102
    OP_LEFT_PARENTHESIS  shift, and go to state 103


State 56

   46 simple_command: OP_SEMICOLON .

    $default  reduce using rule 46 (simple_command)


State 57

   14 func_body: KW_BEGIN body_code comm2 . KW_END

    KW_END  shift, and go to state 104


State 58

   44 comm2: . %empty  [KW_END]
   45      | . simple_command comm2
   45      | simple_command . comm2
   46 simple_command: . OP_SEMICOLON
   47               | . IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON
   48               | . command_if
   49               | . command_for
   50               | . command_while
   51               | . readString_command
   52               | . readInteger_command
   53               | . readReal_command
   54               | . writeString_command
   55               | . writeInteger_command
   56               | . writeReal_command
   57               | . KW_BREAK OP_SEMICOLON
   58               | . KW_CONTINUE OP_SEMICOLON
   59               | . KW_RETURN expression OP_SEMICOLON
   60               | . IDENTIFIER OP_LEFT_PARENTHESIS function_variables OP_RIGHT_PARENTHESIS OP_SEMICOLON
   62 command_if: . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   63           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command
   64           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE command
   65 command_for: . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   67 command_while: . KW_WHILE OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   99 readString_command: . IDENTIFIER OP_ASSIGNMENT KW_READSTRING OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  100 readInteger_command: . IDENTIFIER OP_ASSIGNMENT KW_READINTEGER OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  101 readReal_command: . IDENTIFIER OP_ASSIGNMENT KW_READREAL OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  102 writeString_command: . KW_WRITESTRING OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON
  103                    | . KW_WRITESTRING OP_LEFT_PARENTHESIS CONSTANT_STRING OP_RIGHT_PARENTHESIS OP_SEMICOLON
  104 writeInteger_command: . KW_WRITEINTEGER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS OP_SEMICOLON
  105 writeReal_command: . KW_WRITEREAL OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON

    KW_IF            shift, and go to state 46
    KW_BREAK         shift, and go to state 47
    KW_CONTINUE      shift, and go to state 48
    KW_FOR           shift, and go to state 49
    KW_RETURN        shift, and go to state 50
    KW_WHILE         shift, and go to state 51
    KW_WRITESTRING   shift, and go to state 52
    KW_WRITEINTEGER  shift, and go to state 53
    KW_WRITEREAL     shift, and go to state 54
    IDENTIFIER       shift, and go to state 55
    OP_SEMICOLON     shift, and go to state 56

    $default  reduce using rule 44 (comm2)

    comm2                 go to state 105
    simple_command        go to state 58
    command_if            go to state 59
    command_for           go to state 60
    command_while         go to state 61
    readString_command    go to state 62
    readInteger_command   go to state 63
    readReal_command      go to state 64
    writeString_command   go to state 65
    writeInteger_command  go to state 66
    writeReal_command     go to state 67


State 59

   48 simple_command: command_if .

    $default  reduce using rule 48 (simple_command)


State 60

   49 simple_command: command_for .

    $default  reduce using rule 49 (simple_command)


State 61

   50 simple_command: command_while .

    $default  reduce using rule 50 (simple_command)


State 62

   51 simple_command: readString_command .

    $default  reduce using rule 51 (simple_command)


State 63

   52 simple_command: readInteger_command .

    $default  reduce using rule 52 (simple_command)


State 64

   53 simple_command: readReal_command .

    $default  reduce using rule 53 (simple_command)


State 65

   54 simple_command: writeString_command .

    $default  reduce using rule 54 (simple_command)


State 66

   55 simple_command: writeInteger_command .

    $default  reduce using rule 55 (simple_command)


State 67

   56 simple_command: writeReal_command .

    $default  reduce using rule 56 (simple_command)


State 68

   15 body_code: . %empty  [KW_IF, KW_BREAK, KW_CONTINUE, KW_FOR, KW_RETURN, KW_END, KW_WHILE, KW_WRITESTRING, KW_WRITEINTEGER, KW_WRITEREAL, IDENTIFIER, OP_SEMICOLON]
   16          | . func_data_types OP_SEMICOLON body_code
   16          | func_data_types OP_SEMICOLON . body_code
   17 func_data_types: . basic_data_type IDENTIFIER
   18                | . func_data_types OP_COMMA IDENTIFIER
   19                | . basic_data_type IDENTIFIER OP_ASSIGNMENT sinplin const
   20                | . func_data_types OP_COMMA IDENTIFIER OP_ASSIGNMENT sinplin const
   30 basic_data_type: . KW_INTEGER
   31                | . KW_BOOLEAN
   32                | . KW_CHARACTER
   33                | . KW_REAL
   34                | . KW_STRING

    KW_BOOLEAN    shift, and go to state 5
    KW_INTEGER    shift, and go to state 6
    KW_STRING     shift, and go to state 7
    KW_CHARACTER  shift, and go to state 8
    KW_REAL       shift, and go to state 10

    $default  reduce using rule 15 (body_code)

    body_code        go to state 106
    func_data_types  go to state 32
    basic_data_type  go to state 33


State 69

   18 func_data_types: func_data_types OP_COMMA . IDENTIFIER
   20                | func_data_types OP_COMMA . IDENTIFIER OP_ASSIGNMENT sinplin const

    IDENTIFIER  shift, and go to state 107


State 70

   17 func_data_types: basic_data_type IDENTIFIER .  [OP_SEMICOLON, OP_COMMA]
   19                | basic_data_type IDENTIFIER . OP_ASSIGNMENT sinplin const

    OP_ASSIGNMENT  shift, and go to state 108

    $default  reduce using rule 17 (func_data_types)


State 71

   12 header: basic_data_type IDENTIFIER . OP_LEFT_PARENTHESIS parameters OP_RIGHT_PARENTHESIS

    OP_LEFT_PARENTHESIS  shift, and go to state 37


State 72

   36 sinplin: OP_PLUS .

    $default  reduce using rule 36 (sinplin)


State 73

   37 sinplin: OP_MINUS .

    $default  reduce using rule 37 (sinplin)


State 74

   25 comp: basic_data_type IDENTIFIER OP_ASSIGNMENT sinplin . const
   38 const: . REAL
   39      | . POSITIVEINT
   40      | . KW_TRUE
   41      | . KW_FALSE

    KW_TRUE      shift, and go to state 109
    KW_FALSE     shift, and go to state 110
    POSITIVEINT  shift, and go to state 111
    REAL         shift, and go to state 112

    const  go to state 113


State 75

   12 header: basic_data_type IDENTIFIER OP_LEFT_PARENTHESIS parameters . OP_RIGHT_PARENTHESIS
   22 parameters: parameters . OP_COMMA basic_data_type IDENTIFIER

    OP_RIGHT_PARENTHESIS  shift, and go to state 114
    OP_COMMA              shift, and go to state 80


State 76

   28 multi_bracket: OP_LEFT_BRACKET POSITIVEINT . OP_RIGHT_BRACKET

    OP_RIGHT_BRACKET  shift, and go to state 115


State 77

   29 multi_bracket: multi_bracket OP_LEFT_BRACKET . POSITIVEINT OP_RIGHT_BRACKET

    POSITIVEINT  shift, and go to state 116


State 78

   27 static_comp: KW_STATIC basic_data_type IDENTIFIER OP_ASSIGNMENT sinplin . const
   38 const: . REAL
   39      | . POSITIVEINT
   40      | . KW_TRUE
   41      | . KW_FALSE

    KW_TRUE      shift, and go to state 109
    KW_FALSE     shift, and go to state 110
    POSITIVEINT  shift, and go to state 111
    REAL         shift, and go to state 112

    const  go to state 117


State 79

   13 header: KW_VOID IDENTIFIER OP_LEFT_PARENTHESIS parameters OP_RIGHT_PARENTHESIS .

    $default  reduce using rule 13 (header)


State 80

   22 parameters: parameters OP_COMMA . basic_data_type IDENTIFIER
   30 basic_data_type: . KW_INTEGER
   31                | . KW_BOOLEAN
   32                | . KW_CHARACTER
   33                | . KW_REAL
   34                | . KW_STRING

    KW_BOOLEAN    shift, and go to state 5
    KW_INTEGER    shift, and go to state 6
    KW_STRING     shift, and go to state 7
    KW_CHARACTER  shift, and go to state 8
    KW_REAL       shift, and go to state 10

    basic_data_type  go to state 118


State 81

   21 parameters: basic_data_type IDENTIFIER .

    $default  reduce using rule 21 (parameters)


State 82

   26 comp: data_types OP_COMMA IDENTIFIER OP_ASSIGNMENT sinplin . const
   38 const: . REAL
   39      | . POSITIVEINT
   40      | . KW_TRUE
   41      | . KW_FALSE

    KW_TRUE      shift, and go to state 109
    KW_FALSE     shift, and go to state 110
    POSITIVEINT  shift, and go to state 111
    REAL         shift, and go to state 112

    const  go to state 119


State 83

   11 main_decl: KW_MAIN OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS func_body .

    $default  reduce using rule 11 (main_decl)


State 84

   62 command_if: KW_IF OP_LEFT_PARENTHESIS . expression OP_RIGHT_PARENTHESIS command
   63           | KW_IF OP_LEFT_PARENTHESIS . expression OP_RIGHT_PARENTHESIS KW_THEN command
   64           | KW_IF OP_LEFT_PARENTHESIS . expression OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE command
   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 120
    constant    go to state 97


State 85

   57 simple_command: KW_BREAK OP_SEMICOLON .

    $default  reduce using rule 57 (simple_command)


State 86

   58 simple_command: KW_CONTINUE OP_SEMICOLON .

    $default  reduce using rule 58 (simple_command)


State 87

   65 command_for: KW_FOR OP_LEFT_PARENTHESIS . IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | KW_FOR OP_LEFT_PARENTHESIS . IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command

    IDENTIFIER  shift, and go to state 121


State 88

   92 expression: KW_TRUE .

    $default  reduce using rule 92 (expression)


State 89

   93 expression: KW_FALSE .

    $default  reduce using rule 93 (expression)


State 90

   90 expression: IDENTIFIER . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | IDENTIFIER . OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   98 constant: IDENTIFIER .  [KW_AND, KW_MOD, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]

    OP_LEFT_PARENTHESIS  shift, and go to state 122
    OP_LEFT_BRACKET      shift, and go to state 123

    $default  reduce using rule 98 (constant)


State 91

   96 constant: POSITIVEINT .

    $default  reduce using rule 96 (constant)


State 92

   97 constant: REAL .

    $default  reduce using rule 97 (constant)


State 93

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   88           | OP_PLUS . expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 124
    constant    go to state 97


State 94

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   89           | OP_MINUS . expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 125
    constant    go to state 97


State 95

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   72           | OP_LEFT_PARENTHESIS . expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 126
    constant    go to state 97


State 96

   59 simple_command: KW_RETURN expression . OP_SEMICOLON
   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_AND             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    KW_OR              shift, and go to state 129
    OP_PLUS            shift, and go to state 130
    OP_MINUS           shift, and go to state 131
    OP_MULT            shift, and go to state 132
    OP_DIV             shift, and go to state 133
    OP_EQUAL           shift, and go to state 134
    OP_NOTEQUAL        shift, and go to state 135
    OP_LESS            shift, and go to state 136
    OP_LESSOREQUAL     shift, and go to state 137
    OP_GREATER         shift, and go to state 138
    OP_GREATEROREQUAL  shift, and go to state 139
    OP_SEMICOLON       shift, and go to state 140
    OP_AND             shift, and go to state 141
    OP_OR              shift, and go to state 142


State 97

   71 expression: constant .

    $default  reduce using rule 71 (expression)


State 98

   67 command_while: KW_WHILE OP_LEFT_PARENTHESIS . expression OP_RIGHT_PARENTHESIS command
   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 143
    constant    go to state 97


State 99

  102 writeString_command: KW_WRITESTRING OP_LEFT_PARENTHESIS . IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON
  103                    | KW_WRITESTRING OP_LEFT_PARENTHESIS . CONSTANT_STRING OP_RIGHT_PARENTHESIS OP_SEMICOLON

    IDENTIFIER       shift, and go to state 144
    CONSTANT_STRING  shift, and go to state 145


State 100

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER
  104 writeInteger_command: KW_WRITEINTEGER OP_LEFT_PARENTHESIS . expression OP_RIGHT_PARENTHESIS OP_SEMICOLON

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 146
    constant    go to state 97


State 101

  105 writeReal_command: KW_WRITEREAL OP_LEFT_PARENTHESIS . IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON

    IDENTIFIER  shift, and go to state 147


State 102

   47 simple_command: IDENTIFIER OP_ASSIGNMENT . expression OP_SEMICOLON
   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER
   99 readString_command: IDENTIFIER OP_ASSIGNMENT . KW_READSTRING OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  100 readInteger_command: IDENTIFIER OP_ASSIGNMENT . KW_READINTEGER OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  101 readReal_command: IDENTIFIER OP_ASSIGNMENT . KW_READREAL OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    KW_READSTRING        shift, and go to state 148
    KW_READINTEGER       shift, and go to state 149
    KW_READREAL          shift, and go to state 150
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 151
    constant    go to state 97


State 103

   60 simple_command: IDENTIFIER OP_LEFT_PARENTHESIS . function_variables OP_RIGHT_PARENTHESIS OP_SEMICOLON
   68 function_variables: . %empty  [OP_RIGHT_PARENTHESIS]
   69                   | . constant
   70                   | . constant OP_COMMA function_variables
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    IDENTIFIER   shift, and go to state 152
    POSITIVEINT  shift, and go to state 91
    REAL         shift, and go to state 92

    $default  reduce using rule 68 (function_variables)

    function_variables  go to state 153
    constant            go to state 154


State 104

   14 func_body: KW_BEGIN body_code comm2 KW_END .

    $default  reduce using rule 14 (func_body)


State 105

   45 comm2: simple_command comm2 .

    $default  reduce using rule 45 (comm2)


State 106

   16 body_code: func_data_types OP_SEMICOLON body_code .

    $default  reduce using rule 16 (body_code)


State 107

   18 func_data_types: func_data_types OP_COMMA IDENTIFIER .  [OP_SEMICOLON, OP_COMMA]
   20                | func_data_types OP_COMMA IDENTIFIER . OP_ASSIGNMENT sinplin const

    OP_ASSIGNMENT  shift, and go to state 155

    $default  reduce using rule 18 (func_data_types)


State 108

   19 func_data_types: basic_data_type IDENTIFIER OP_ASSIGNMENT . sinplin const
   35 sinplin: . %empty  [KW_TRUE, KW_FALSE, POSITIVEINT, REAL]
   36        | . OP_PLUS
   37        | . OP_MINUS

    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73

    $default  reduce using rule 35 (sinplin)

    sinplin  go to state 156


State 109

   40 const: KW_TRUE .

    $default  reduce using rule 40 (const)


State 110

   41 const: KW_FALSE .

    $default  reduce using rule 41 (const)


State 111

   39 const: POSITIVEINT .

    $default  reduce using rule 39 (const)


State 112

   38 const: REAL .

    $default  reduce using rule 38 (const)


State 113

   25 comp: basic_data_type IDENTIFIER OP_ASSIGNMENT sinplin const .

    $default  reduce using rule 25 (comp)


State 114

   12 header: basic_data_type IDENTIFIER OP_LEFT_PARENTHESIS parameters OP_RIGHT_PARENTHESIS .

    $default  reduce using rule 12 (header)


State 115

   28 multi_bracket: OP_LEFT_BRACKET POSITIVEINT OP_RIGHT_BRACKET .

    $default  reduce using rule 28 (multi_bracket)


State 116

   29 multi_bracket: multi_bracket OP_LEFT_BRACKET POSITIVEINT . OP_RIGHT_BRACKET

    OP_RIGHT_BRACKET  shift, and go to state 157


State 117

   27 static_comp: KW_STATIC basic_data_type IDENTIFIER OP_ASSIGNMENT sinplin const .

    $default  reduce using rule 27 (static_comp)


State 118

   22 parameters: parameters OP_COMMA basic_data_type . IDENTIFIER

    IDENTIFIER  shift, and go to state 158


State 119

   26 comp: data_types OP_COMMA IDENTIFIER OP_ASSIGNMENT sinplin const .

    $default  reduce using rule 26 (comp)


State 120

   62 command_if: KW_IF OP_LEFT_PARENTHESIS expression . OP_RIGHT_PARENTHESIS command
   63           | KW_IF OP_LEFT_PARENTHESIS expression . OP_RIGHT_PARENTHESIS KW_THEN command
   64           | KW_IF OP_LEFT_PARENTHESIS expression . OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE command
   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_AND                shift, and go to state 127
    KW_MOD                shift, and go to state 128
    KW_OR                 shift, and go to state 129
    OP_PLUS               shift, and go to state 130
    OP_MINUS              shift, and go to state 131
    OP_MULT               shift, and go to state 132
    OP_DIV                shift, and go to state 133
    OP_EQUAL              shift, and go to state 134
    OP_NOTEQUAL           shift, and go to state 135
    OP_LESS               shift, and go to state 136
    OP_LESSOREQUAL        shift, and go to state 137
    OP_GREATER            shift, and go to state 138
    OP_GREATEROREQUAL     shift, and go to state 139
    OP_RIGHT_PARENTHESIS  shift, and go to state 159
    OP_AND                shift, and go to state 141
    OP_OR                 shift, and go to state 142


State 121

   65 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER . OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER . OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command

    OP_ASSIGNMENT  shift, and go to state 160


State 122

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   90           | IDENTIFIER OP_LEFT_PARENTHESIS . expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 161
    constant    go to state 97


State 123

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   91           | IDENTIFIER OP_LEFT_BRACKET . expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 162
    constant    go to state 97


State 124

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression
   88           | OP_PLUS expression .  [KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]

    KW_MOD   shift, and go to state 128
    OP_MULT  shift, and go to state 132
    OP_DIV   shift, and go to state 133

    $default  reduce using rule 88 (expression)

    Conflict between rule 88 and token KW_AND resolved as reduce (KW_AND < OP_PLUS).
    Conflict between rule 88 and token KW_MOD resolved as shift (OP_PLUS < KW_MOD).
    Conflict between rule 88 and token KW_OR resolved as reduce (KW_OR < OP_PLUS).
    Conflict between rule 88 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 88 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 88 and token OP_MULT resolved as shift (OP_PLUS < OP_MULT).
    Conflict between rule 88 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 88 and token OP_EQUAL resolved as reduce (OP_EQUAL < OP_PLUS).
    Conflict between rule 88 and token OP_NOTEQUAL resolved as reduce (OP_NOTEQUAL < OP_PLUS).
    Conflict between rule 88 and token OP_LESS resolved as reduce (OP_LESS < OP_PLUS).
    Conflict between rule 88 and token OP_LESSOREQUAL resolved as reduce (OP_LESSOREQUAL < OP_PLUS).
    Conflict between rule 88 and token OP_GREATER resolved as reduce (OP_GREATER < OP_PLUS).
    Conflict between rule 88 and token OP_GREATEROREQUAL resolved as reduce (OP_GREATEROREQUAL < OP_PLUS).
    Conflict between rule 88 and token OP_AND resolved as reduce (OP_AND < OP_PLUS).
    Conflict between rule 88 and token OP_OR resolved as reduce (OP_OR < OP_PLUS).


State 125

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression
   89           | OP_MINUS expression .  [KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]

    KW_MOD   shift, and go to state 128
    OP_MULT  shift, and go to state 132
    OP_DIV   shift, and go to state 133

    $default  reduce using rule 89 (expression)

    Conflict between rule 89 and token KW_AND resolved as reduce (KW_AND < OP_MINUS).
    Conflict between rule 89 and token KW_MOD resolved as shift (OP_MINUS < KW_MOD).
    Conflict between rule 89 and token KW_OR resolved as reduce (KW_OR < OP_MINUS).
    Conflict between rule 89 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 89 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 89 and token OP_MULT resolved as shift (OP_MINUS < OP_MULT).
    Conflict between rule 89 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 89 and token OP_EQUAL resolved as reduce (OP_EQUAL < OP_MINUS).
    Conflict between rule 89 and token OP_NOTEQUAL resolved as reduce (OP_NOTEQUAL < OP_MINUS).
    Conflict between rule 89 and token OP_LESS resolved as reduce (OP_LESS < OP_MINUS).
    Conflict between rule 89 and token OP_LESSOREQUAL resolved as reduce (OP_LESSOREQUAL < OP_MINUS).
    Conflict between rule 89 and token OP_GREATER resolved as reduce (OP_GREATER < OP_MINUS).
    Conflict between rule 89 and token OP_GREATEROREQUAL resolved as reduce (OP_GREATEROREQUAL < OP_MINUS).
    Conflict between rule 89 and token OP_AND resolved as reduce (OP_AND < OP_MINUS).
    Conflict between rule 89 and token OP_OR resolved as reduce (OP_OR < OP_MINUS).


State 126

   72 expression: OP_LEFT_PARENTHESIS expression . OP_RIGHT_PARENTHESIS
   73           | expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_AND                shift, and go to state 127
    KW_MOD                shift, and go to state 128
    KW_OR                 shift, and go to state 129
    OP_PLUS               shift, and go to state 130
    OP_MINUS              shift, and go to state 131
    OP_MULT               shift, and go to state 132
    OP_DIV                shift, and go to state 133
    OP_EQUAL              shift, and go to state 134
    OP_NOTEQUAL           shift, and go to state 135
    OP_LESS               shift, and go to state 136
    OP_LESSOREQUAL        shift, and go to state 137
    OP_GREATER            shift, and go to state 138
    OP_GREATEROREQUAL     shift, and go to state 139
    OP_RIGHT_PARENTHESIS  shift, and go to state 163
    OP_AND                shift, and go to state 141
    OP_OR                 shift, and go to state 142


State 127

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   81           | expression KW_AND . expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 164
    constant    go to state 97


State 128

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   77           | expression KW_MOD . expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 165
    constant    go to state 97


State 129

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   79           | expression KW_OR . expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 166
    constant    go to state 97


State 130

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   73           | expression OP_PLUS . expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 167
    constant    go to state 97


State 131

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   74           | expression OP_MINUS . expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 168
    constant    go to state 97


State 132

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   75           | expression OP_MULT . expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 169
    constant    go to state 97


State 133

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   76           | expression OP_DIV . expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 170
    constant    go to state 97


State 134

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   82           | expression OP_EQUAL . expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 171
    constant    go to state 97


State 135

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   83           | expression OP_NOTEQUAL . expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 172
    constant    go to state 97


State 136

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   84           | expression OP_LESS . expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 173
    constant    go to state 97


State 137

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   86           | expression OP_LESSOREQUAL . expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 174
    constant    go to state 97


State 138

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   85           | expression OP_GREATER . expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 175
    constant    go to state 97


State 139

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   87           | expression OP_GREATEROREQUAL . expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 176
    constant    go to state 97


State 140

   59 simple_command: KW_RETURN expression OP_SEMICOLON .

    $default  reduce using rule 59 (simple_command)


State 141

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   80           | expression OP_AND . expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 177
    constant    go to state 97


State 142

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   78           | expression OP_OR . expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 178
    constant    go to state 97


State 143

   67 command_while: KW_WHILE OP_LEFT_PARENTHESIS expression . OP_RIGHT_PARENTHESIS command
   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_AND                shift, and go to state 127
    KW_MOD                shift, and go to state 128
    KW_OR                 shift, and go to state 129
    OP_PLUS               shift, and go to state 130
    OP_MINUS              shift, and go to state 131
    OP_MULT               shift, and go to state 132
    OP_DIV                shift, and go to state 133
    OP_EQUAL              shift, and go to state 134
    OP_NOTEQUAL           shift, and go to state 135
    OP_LESS               shift, and go to state 136
    OP_LESSOREQUAL        shift, and go to state 137
    OP_GREATER            shift, and go to state 138
    OP_GREATEROREQUAL     shift, and go to state 139
    OP_RIGHT_PARENTHESIS  shift, and go to state 179
    OP_AND                shift, and go to state 141
    OP_OR                 shift, and go to state 142


State 144

  102 writeString_command: KW_WRITESTRING OP_LEFT_PARENTHESIS IDENTIFIER . OP_RIGHT_PARENTHESIS OP_SEMICOLON

    OP_RIGHT_PARENTHESIS  shift, and go to state 180


State 145

  103 writeString_command: KW_WRITESTRING OP_LEFT_PARENTHESIS CONSTANT_STRING . OP_RIGHT_PARENTHESIS OP_SEMICOLON

    OP_RIGHT_PARENTHESIS  shift, and go to state 181


State 146

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression
  104 writeInteger_command: KW_WRITEINTEGER OP_LEFT_PARENTHESIS expression . OP_RIGHT_PARENTHESIS OP_SEMICOLON

    KW_AND                shift, and go to state 127
    KW_MOD                shift, and go to state 128
    KW_OR                 shift, and go to state 129
    OP_PLUS               shift, and go to state 130
    OP_MINUS              shift, and go to state 131
    OP_MULT               shift, and go to state 132
    OP_DIV                shift, and go to state 133
    OP_EQUAL              shift, and go to state 134
    OP_NOTEQUAL           shift, and go to state 135
    OP_LESS               shift, and go to state 136
    OP_LESSOREQUAL        shift, and go to state 137
    OP_GREATER            shift, and go to state 138
    OP_GREATEROREQUAL     shift, and go to state 139
    OP_RIGHT_PARENTHESIS  shift, and go to state 182
    OP_AND                shift, and go to state 141
    OP_OR                 shift, and go to state 142


State 147

  105 writeReal_command: KW_WRITEREAL OP_LEFT_PARENTHESIS IDENTIFIER . OP_RIGHT_PARENTHESIS OP_SEMICOLON

    OP_RIGHT_PARENTHESIS  shift, and go to state 183


State 148

   99 readString_command: IDENTIFIER OP_ASSIGNMENT KW_READSTRING . OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON

    OP_LEFT_PARENTHESIS  shift, and go to state 184


State 149

  100 readInteger_command: IDENTIFIER OP_ASSIGNMENT KW_READINTEGER . OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON

    OP_LEFT_PARENTHESIS  shift, and go to state 185


State 150

  101 readReal_command: IDENTIFIER OP_ASSIGNMENT KW_READREAL . OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON

    OP_LEFT_PARENTHESIS  shift, and go to state 186


State 151

   47 simple_command: IDENTIFIER OP_ASSIGNMENT expression . OP_SEMICOLON
   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_AND             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    KW_OR              shift, and go to state 129
    OP_PLUS            shift, and go to state 130
    OP_MINUS           shift, and go to state 131
    OP_MULT            shift, and go to state 132
    OP_DIV             shift, and go to state 133
    OP_EQUAL           shift, and go to state 134
    OP_NOTEQUAL        shift, and go to state 135
    OP_LESS            shift, and go to state 136
    OP_LESSOREQUAL     shift, and go to state 137
    OP_GREATER         shift, and go to state 138
    OP_GREATEROREQUAL  shift, and go to state 139
    OP_SEMICOLON       shift, and go to state 187
    OP_AND             shift, and go to state 141
    OP_OR              shift, and go to state 142


State 152

   98 constant: IDENTIFIER .

    $default  reduce using rule 98 (constant)


State 153

   60 simple_command: IDENTIFIER OP_LEFT_PARENTHESIS function_variables . OP_RIGHT_PARENTHESIS OP_SEMICOLON

    OP_RIGHT_PARENTHESIS  shift, and go to state 188


State 154

   69 function_variables: constant .  [OP_RIGHT_PARENTHESIS]
   70                   | constant . OP_COMMA function_variables

    OP_COMMA  shift, and go to state 189

    $default  reduce using rule 69 (function_variables)


State 155

   20 func_data_types: func_data_types OP_COMMA IDENTIFIER OP_ASSIGNMENT . sinplin const
   35 sinplin: . %empty  [KW_TRUE, KW_FALSE, POSITIVEINT, REAL]
   36        | . OP_PLUS
   37        | . OP_MINUS

    OP_PLUS   shift, and go to state 72
    OP_MINUS  shift, and go to state 73

    $default  reduce using rule 35 (sinplin)

    sinplin  go to state 190


State 156

   19 func_data_types: basic_data_type IDENTIFIER OP_ASSIGNMENT sinplin . const
   38 const: . REAL
   39      | . POSITIVEINT
   40      | . KW_TRUE
   41      | . KW_FALSE

    KW_TRUE      shift, and go to state 109
    KW_FALSE     shift, and go to state 110
    POSITIVEINT  shift, and go to state 111
    REAL         shift, and go to state 112

    const  go to state 191


State 157

   29 multi_bracket: multi_bracket OP_LEFT_BRACKET POSITIVEINT OP_RIGHT_BRACKET .

    $default  reduce using rule 29 (multi_bracket)


State 158

   22 parameters: parameters OP_COMMA basic_data_type IDENTIFIER .

    $default  reduce using rule 22 (parameters)


State 159

   42 command: . simple_command
   43        | . complex_command
   46 simple_command: . OP_SEMICOLON
   47               | . IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON
   48               | . command_if
   49               | . command_for
   50               | . command_while
   51               | . readString_command
   52               | . readInteger_command
   53               | . readReal_command
   54               | . writeString_command
   55               | . writeInteger_command
   56               | . writeReal_command
   57               | . KW_BREAK OP_SEMICOLON
   58               | . KW_CONTINUE OP_SEMICOLON
   59               | . KW_RETURN expression OP_SEMICOLON
   60               | . IDENTIFIER OP_LEFT_PARENTHESIS function_variables OP_RIGHT_PARENTHESIS OP_SEMICOLON
   61 complex_command: . KW_BEGIN comm2 KW_END
   62 command_if: . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   62           | KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS . command
   63           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command
   63           | KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS . KW_THEN command
   64           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE command
   64           | KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS . KW_THEN command KW_ELSE command
   65 command_for: . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   67 command_while: . KW_WHILE OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   99 readString_command: . IDENTIFIER OP_ASSIGNMENT KW_READSTRING OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  100 readInteger_command: . IDENTIFIER OP_ASSIGNMENT KW_READINTEGER OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  101 readReal_command: . IDENTIFIER OP_ASSIGNMENT KW_READREAL OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  102 writeString_command: . KW_WRITESTRING OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON
  103                    | . KW_WRITESTRING OP_LEFT_PARENTHESIS CONSTANT_STRING OP_RIGHT_PARENTHESIS OP_SEMICOLON
  104 writeInteger_command: . KW_WRITEINTEGER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS OP_SEMICOLON
  105 writeReal_command: . KW_WRITEREAL OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON

    KW_IF            shift, and go to state 46
    KW_BREAK         shift, and go to state 47
    KW_CONTINUE      shift, and go to state 48
    KW_FOR           shift, and go to state 49
    KW_RETURN        shift, and go to state 50
    KW_BEGIN         shift, and go to state 192
    KW_WHILE         shift, and go to state 51
    KW_WRITESTRING   shift, and go to state 52
    KW_WRITEINTEGER  shift, and go to state 53
    KW_WRITEREAL     shift, and go to state 54
    IDENTIFIER       shift, and go to state 55
    OP_SEMICOLON     shift, and go to state 56
    KW_THEN          shift, and go to state 193

    command               go to state 194
    simple_command        go to state 195
    complex_command       go to state 196
    command_if            go to state 59
    command_for           go to state 60
    command_while         go to state 61
    readString_command    go to state 62
    readInteger_command   go to state 63
    readReal_command      go to state 64
    writeString_command   go to state 65
    writeInteger_command  go to state 66
    writeReal_command     go to state 67


State 160

   65 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT . expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT . expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 197
    constant    go to state 97


State 161

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression
   90           | IDENTIFIER OP_LEFT_PARENTHESIS expression . OP_RIGHT_PARENTHESIS

    KW_AND                shift, and go to state 127
    KW_MOD                shift, and go to state 128
    KW_OR                 shift, and go to state 129
    OP_PLUS               shift, and go to state 130
    OP_MINUS              shift, and go to state 131
    OP_MULT               shift, and go to state 132
    OP_DIV                shift, and go to state 133
    OP_EQUAL              shift, and go to state 134
    OP_NOTEQUAL           shift, and go to state 135
    OP_LESS               shift, and go to state 136
    OP_LESSOREQUAL        shift, and go to state 137
    OP_GREATER            shift, and go to state 138
    OP_GREATEROREQUAL     shift, and go to state 139
    OP_RIGHT_PARENTHESIS  shift, and go to state 198
    OP_AND                shift, and go to state 141
    OP_OR                 shift, and go to state 142


State 162

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression
   91           | IDENTIFIER OP_LEFT_BRACKET expression . OP_RIGHT_BRACKET multi_exp_bracket

    KW_AND             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    KW_OR              shift, and go to state 129
    OP_PLUS            shift, and go to state 130
    OP_MINUS           shift, and go to state 131
    OP_MULT            shift, and go to state 132
    OP_DIV             shift, and go to state 133
    OP_EQUAL           shift, and go to state 134
    OP_NOTEQUAL        shift, and go to state 135
    OP_LESS            shift, and go to state 136
    OP_LESSOREQUAL     shift, and go to state 137
    OP_GREATER         shift, and go to state 138
    OP_GREATEROREQUAL  shift, and go to state 139
    OP_RIGHT_BRACKET   shift, and go to state 199
    OP_AND             shift, and go to state 141
    OP_OR              shift, and go to state 142


State 163

   72 expression: OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS .

    $default  reduce using rule 72 (expression)


State 164

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   81           | expression KW_AND expression .  [KW_AND, KW_OR, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_MOD             shift, and go to state 128
    OP_PLUS            shift, and go to state 130
    OP_MINUS           shift, and go to state 131
    OP_MULT            shift, and go to state 132
    OP_DIV             shift, and go to state 133
    OP_EQUAL           shift, and go to state 134
    OP_NOTEQUAL        shift, and go to state 135
    OP_LESS            shift, and go to state 136
    OP_LESSOREQUAL     shift, and go to state 137
    OP_GREATER         shift, and go to state 138
    OP_GREATEROREQUAL  shift, and go to state 139

    $default  reduce using rule 81 (expression)

    Conflict between rule 81 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 81 and token KW_MOD resolved as shift (KW_AND < KW_MOD).
    Conflict between rule 81 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 81 and token OP_PLUS resolved as shift (KW_AND < OP_PLUS).
    Conflict between rule 81 and token OP_MINUS resolved as shift (KW_AND < OP_MINUS).
    Conflict between rule 81 and token OP_MULT resolved as shift (KW_AND < OP_MULT).
    Conflict between rule 81 and token OP_DIV resolved as shift (KW_AND < OP_DIV).
    Conflict between rule 81 and token OP_EQUAL resolved as shift (KW_AND < OP_EQUAL).
    Conflict between rule 81 and token OP_NOTEQUAL resolved as shift (KW_AND < OP_NOTEQUAL).
    Conflict between rule 81 and token OP_LESS resolved as shift (KW_AND < OP_LESS).
    Conflict between rule 81 and token OP_LESSOREQUAL resolved as shift (KW_AND < OP_LESSOREQUAL).
    Conflict between rule 81 and token OP_GREATER resolved as shift (KW_AND < OP_GREATER).
    Conflict between rule 81 and token OP_GREATEROREQUAL resolved as shift (KW_AND < OP_GREATEROREQUAL).
    Conflict between rule 81 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 81 and token OP_OR resolved as reduce (OP_OR < KW_AND).


State 165

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   77           | expression KW_MOD expression .  [KW_AND, KW_MOD, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    $default  reduce using rule 77 (expression)

    Conflict between rule 77 and token KW_AND resolved as reduce (KW_AND < KW_MOD).
    Conflict between rule 77 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 77 and token KW_OR resolved as reduce (KW_OR < KW_MOD).
    Conflict between rule 77 and token OP_PLUS resolved as reduce (OP_PLUS < KW_MOD).
    Conflict between rule 77 and token OP_MINUS resolved as reduce (OP_MINUS < KW_MOD).
    Conflict between rule 77 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 77 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 77 and token OP_EQUAL resolved as reduce (OP_EQUAL < KW_MOD).
    Conflict between rule 77 and token OP_NOTEQUAL resolved as reduce (OP_NOTEQUAL < KW_MOD).
    Conflict between rule 77 and token OP_LESS resolved as reduce (OP_LESS < KW_MOD).
    Conflict between rule 77 and token OP_LESSOREQUAL resolved as reduce (OP_LESSOREQUAL < KW_MOD).
    Conflict between rule 77 and token OP_GREATER resolved as reduce (OP_GREATER < KW_MOD).
    Conflict between rule 77 and token OP_GREATEROREQUAL resolved as reduce (OP_GREATEROREQUAL < KW_MOD).
    Conflict between rule 77 and token OP_AND resolved as reduce (OP_AND < KW_MOD).
    Conflict between rule 77 and token OP_OR resolved as reduce (OP_OR < KW_MOD).


State 166

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   79           | expression KW_OR expression .  [KW_OR, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_OR]
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_AND             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    OP_PLUS            shift, and go to state 130
    OP_MINUS           shift, and go to state 131
    OP_MULT            shift, and go to state 132
    OP_DIV             shift, and go to state 133
    OP_EQUAL           shift, and go to state 134
    OP_NOTEQUAL        shift, and go to state 135
    OP_LESS            shift, and go to state 136
    OP_LESSOREQUAL     shift, and go to state 137
    OP_GREATER         shift, and go to state 138
    OP_GREATEROREQUAL  shift, and go to state 139
    OP_AND             shift, and go to state 141

    $default  reduce using rule 79 (expression)

    Conflict between rule 79 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 79 and token KW_MOD resolved as shift (KW_OR < KW_MOD).
    Conflict between rule 79 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 79 and token OP_PLUS resolved as shift (KW_OR < OP_PLUS).
    Conflict between rule 79 and token OP_MINUS resolved as shift (KW_OR < OP_MINUS).
    Conflict between rule 79 and token OP_MULT resolved as shift (KW_OR < OP_MULT).
    Conflict between rule 79 and token OP_DIV resolved as shift (KW_OR < OP_DIV).
    Conflict between rule 79 and token OP_EQUAL resolved as shift (KW_OR < OP_EQUAL).
    Conflict between rule 79 and token OP_NOTEQUAL resolved as shift (KW_OR < OP_NOTEQUAL).
    Conflict between rule 79 and token OP_LESS resolved as shift (KW_OR < OP_LESS).
    Conflict between rule 79 and token OP_LESSOREQUAL resolved as shift (KW_OR < OP_LESSOREQUAL).
    Conflict between rule 79 and token OP_GREATER resolved as shift (KW_OR < OP_GREATER).
    Conflict between rule 79 and token OP_GREATEROREQUAL resolved as shift (KW_OR < OP_GREATEROREQUAL).
    Conflict between rule 79 and token OP_AND resolved as shift (KW_OR < OP_AND).
    Conflict between rule 79 and token OP_OR resolved as reduce (%left OP_OR).


State 167

   73 expression: expression . OP_PLUS expression
   73           | expression OP_PLUS expression .  [KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_MOD   shift, and go to state 128
    OP_MULT  shift, and go to state 132
    OP_DIV   shift, and go to state 133

    $default  reduce using rule 73 (expression)

    Conflict between rule 73 and token KW_AND resolved as reduce (KW_AND < OP_PLUS).
    Conflict between rule 73 and token KW_MOD resolved as shift (OP_PLUS < KW_MOD).
    Conflict between rule 73 and token KW_OR resolved as reduce (KW_OR < OP_PLUS).
    Conflict between rule 73 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 73 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 73 and token OP_MULT resolved as shift (OP_PLUS < OP_MULT).
    Conflict between rule 73 and token OP_DIV resolved as shift (OP_PLUS < OP_DIV).
    Conflict between rule 73 and token OP_EQUAL resolved as reduce (OP_EQUAL < OP_PLUS).
    Conflict between rule 73 and token OP_NOTEQUAL resolved as reduce (OP_NOTEQUAL < OP_PLUS).
    Conflict between rule 73 and token OP_LESS resolved as reduce (OP_LESS < OP_PLUS).
    Conflict between rule 73 and token OP_LESSOREQUAL resolved as reduce (OP_LESSOREQUAL < OP_PLUS).
    Conflict between rule 73 and token OP_GREATER resolved as reduce (OP_GREATER < OP_PLUS).
    Conflict between rule 73 and token OP_GREATEROREQUAL resolved as reduce (OP_GREATEROREQUAL < OP_PLUS).
    Conflict between rule 73 and token OP_AND resolved as reduce (OP_AND < OP_PLUS).
    Conflict between rule 73 and token OP_OR resolved as reduce (OP_OR < OP_PLUS).


State 168

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   74           | expression OP_MINUS expression .  [KW_AND, KW_OR, OP_PLUS, OP_MINUS, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_MOD   shift, and go to state 128
    OP_MULT  shift, and go to state 132
    OP_DIV   shift, and go to state 133

    $default  reduce using rule 74 (expression)

    Conflict between rule 74 and token KW_AND resolved as reduce (KW_AND < OP_MINUS).
    Conflict between rule 74 and token KW_MOD resolved as shift (OP_MINUS < KW_MOD).
    Conflict between rule 74 and token KW_OR resolved as reduce (KW_OR < OP_MINUS).
    Conflict between rule 74 and token OP_PLUS resolved as reduce (%left OP_PLUS).
    Conflict between rule 74 and token OP_MINUS resolved as reduce (%left OP_MINUS).
    Conflict between rule 74 and token OP_MULT resolved as shift (OP_MINUS < OP_MULT).
    Conflict between rule 74 and token OP_DIV resolved as shift (OP_MINUS < OP_DIV).
    Conflict between rule 74 and token OP_EQUAL resolved as reduce (OP_EQUAL < OP_MINUS).
    Conflict between rule 74 and token OP_NOTEQUAL resolved as reduce (OP_NOTEQUAL < OP_MINUS).
    Conflict between rule 74 and token OP_LESS resolved as reduce (OP_LESS < OP_MINUS).
    Conflict between rule 74 and token OP_LESSOREQUAL resolved as reduce (OP_LESSOREQUAL < OP_MINUS).
    Conflict between rule 74 and token OP_GREATER resolved as reduce (OP_GREATER < OP_MINUS).
    Conflict between rule 74 and token OP_GREATEROREQUAL resolved as reduce (OP_GREATEROREQUAL < OP_MINUS).
    Conflict between rule 74 and token OP_AND resolved as reduce (OP_AND < OP_MINUS).
    Conflict between rule 74 and token OP_OR resolved as reduce (OP_OR < OP_MINUS).


State 169

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   75           | expression OP_MULT expression .  [KW_AND, KW_MOD, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    $default  reduce using rule 75 (expression)

    Conflict between rule 75 and token KW_AND resolved as reduce (KW_AND < OP_MULT).
    Conflict between rule 75 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 75 and token KW_OR resolved as reduce (KW_OR < OP_MULT).
    Conflict between rule 75 and token OP_PLUS resolved as reduce (OP_PLUS < OP_MULT).
    Conflict between rule 75 and token OP_MINUS resolved as reduce (OP_MINUS < OP_MULT).
    Conflict between rule 75 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 75 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 75 and token OP_EQUAL resolved as reduce (OP_EQUAL < OP_MULT).
    Conflict between rule 75 and token OP_NOTEQUAL resolved as reduce (OP_NOTEQUAL < OP_MULT).
    Conflict between rule 75 and token OP_LESS resolved as reduce (OP_LESS < OP_MULT).
    Conflict between rule 75 and token OP_LESSOREQUAL resolved as reduce (OP_LESSOREQUAL < OP_MULT).
    Conflict between rule 75 and token OP_GREATER resolved as reduce (OP_GREATER < OP_MULT).
    Conflict between rule 75 and token OP_GREATEROREQUAL resolved as reduce (OP_GREATEROREQUAL < OP_MULT).
    Conflict between rule 75 and token OP_AND resolved as reduce (OP_AND < OP_MULT).
    Conflict between rule 75 and token OP_OR resolved as reduce (OP_OR < OP_MULT).


State 170

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   76           | expression OP_DIV expression .  [KW_AND, KW_MOD, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    $default  reduce using rule 76 (expression)

    Conflict between rule 76 and token KW_AND resolved as reduce (KW_AND < OP_DIV).
    Conflict between rule 76 and token KW_MOD resolved as reduce (%left KW_MOD).
    Conflict between rule 76 and token KW_OR resolved as reduce (KW_OR < OP_DIV).
    Conflict between rule 76 and token OP_PLUS resolved as reduce (OP_PLUS < OP_DIV).
    Conflict between rule 76 and token OP_MINUS resolved as reduce (OP_MINUS < OP_DIV).
    Conflict between rule 76 and token OP_MULT resolved as reduce (%left OP_MULT).
    Conflict between rule 76 and token OP_DIV resolved as reduce (%left OP_DIV).
    Conflict between rule 76 and token OP_EQUAL resolved as reduce (OP_EQUAL < OP_DIV).
    Conflict between rule 76 and token OP_NOTEQUAL resolved as reduce (OP_NOTEQUAL < OP_DIV).
    Conflict between rule 76 and token OP_LESS resolved as reduce (OP_LESS < OP_DIV).
    Conflict between rule 76 and token OP_LESSOREQUAL resolved as reduce (OP_LESSOREQUAL < OP_DIV).
    Conflict between rule 76 and token OP_GREATER resolved as reduce (OP_GREATER < OP_DIV).
    Conflict between rule 76 and token OP_GREATEROREQUAL resolved as reduce (OP_GREATEROREQUAL < OP_DIV).
    Conflict between rule 76 and token OP_AND resolved as reduce (OP_AND < OP_DIV).
    Conflict between rule 76 and token OP_OR resolved as reduce (OP_OR < OP_DIV).


State 171

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   82           | expression OP_EQUAL expression .  [KW_AND, KW_OR, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_MOD    shift, and go to state 128
    OP_PLUS   shift, and go to state 130
    OP_MINUS  shift, and go to state 131
    OP_MULT   shift, and go to state 132
    OP_DIV    shift, and go to state 133

    $default  reduce using rule 82 (expression)

    Conflict between rule 82 and token KW_AND resolved as reduce (KW_AND < OP_EQUAL).
    Conflict between rule 82 and token KW_MOD resolved as shift (OP_EQUAL < KW_MOD).
    Conflict between rule 82 and token KW_OR resolved as reduce (KW_OR < OP_EQUAL).
    Conflict between rule 82 and token OP_PLUS resolved as shift (OP_EQUAL < OP_PLUS).
    Conflict between rule 82 and token OP_MINUS resolved as shift (OP_EQUAL < OP_MINUS).
    Conflict between rule 82 and token OP_MULT resolved as shift (OP_EQUAL < OP_MULT).
    Conflict between rule 82 and token OP_DIV resolved as shift (OP_EQUAL < OP_DIV).
    Conflict between rule 82 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 82 and token OP_NOTEQUAL resolved as reduce (%left OP_NOTEQUAL).
    Conflict between rule 82 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 82 and token OP_LESSOREQUAL resolved as reduce (%left OP_LESSOREQUAL).
    Conflict between rule 82 and token OP_GREATER resolved as reduce (%left OP_GREATER).
    Conflict between rule 82 and token OP_GREATEROREQUAL resolved as reduce (%left OP_GREATEROREQUAL).
    Conflict between rule 82 and token OP_AND resolved as reduce (OP_AND < OP_EQUAL).
    Conflict between rule 82 and token OP_OR resolved as reduce (OP_OR < OP_EQUAL).


State 172

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   83           | expression OP_NOTEQUAL expression .  [KW_AND, KW_OR, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_MOD    shift, and go to state 128
    OP_PLUS   shift, and go to state 130
    OP_MINUS  shift, and go to state 131
    OP_MULT   shift, and go to state 132
    OP_DIV    shift, and go to state 133

    $default  reduce using rule 83 (expression)

    Conflict between rule 83 and token KW_AND resolved as reduce (KW_AND < OP_NOTEQUAL).
    Conflict between rule 83 and token KW_MOD resolved as shift (OP_NOTEQUAL < KW_MOD).
    Conflict between rule 83 and token KW_OR resolved as reduce (KW_OR < OP_NOTEQUAL).
    Conflict between rule 83 and token OP_PLUS resolved as shift (OP_NOTEQUAL < OP_PLUS).
    Conflict between rule 83 and token OP_MINUS resolved as shift (OP_NOTEQUAL < OP_MINUS).
    Conflict between rule 83 and token OP_MULT resolved as shift (OP_NOTEQUAL < OP_MULT).
    Conflict between rule 83 and token OP_DIV resolved as shift (OP_NOTEQUAL < OP_DIV).
    Conflict between rule 83 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 83 and token OP_NOTEQUAL resolved as reduce (%left OP_NOTEQUAL).
    Conflict between rule 83 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 83 and token OP_LESSOREQUAL resolved as reduce (%left OP_LESSOREQUAL).
    Conflict between rule 83 and token OP_GREATER resolved as reduce (%left OP_GREATER).
    Conflict between rule 83 and token OP_GREATEROREQUAL resolved as reduce (%left OP_GREATEROREQUAL).
    Conflict between rule 83 and token OP_AND resolved as reduce (OP_AND < OP_NOTEQUAL).
    Conflict between rule 83 and token OP_OR resolved as reduce (OP_OR < OP_NOTEQUAL).


State 173

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   84           | expression OP_LESS expression .  [KW_AND, KW_OR, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_MOD    shift, and go to state 128
    OP_PLUS   shift, and go to state 130
    OP_MINUS  shift, and go to state 131
    OP_MULT   shift, and go to state 132
    OP_DIV    shift, and go to state 133

    $default  reduce using rule 84 (expression)

    Conflict between rule 84 and token KW_AND resolved as reduce (KW_AND < OP_LESS).
    Conflict between rule 84 and token KW_MOD resolved as shift (OP_LESS < KW_MOD).
    Conflict between rule 84 and token KW_OR resolved as reduce (KW_OR < OP_LESS).
    Conflict between rule 84 and token OP_PLUS resolved as shift (OP_LESS < OP_PLUS).
    Conflict between rule 84 and token OP_MINUS resolved as shift (OP_LESS < OP_MINUS).
    Conflict between rule 84 and token OP_MULT resolved as shift (OP_LESS < OP_MULT).
    Conflict between rule 84 and token OP_DIV resolved as shift (OP_LESS < OP_DIV).
    Conflict between rule 84 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 84 and token OP_NOTEQUAL resolved as reduce (%left OP_NOTEQUAL).
    Conflict between rule 84 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 84 and token OP_LESSOREQUAL resolved as reduce (%left OP_LESSOREQUAL).
    Conflict between rule 84 and token OP_GREATER resolved as reduce (%left OP_GREATER).
    Conflict between rule 84 and token OP_GREATEROREQUAL resolved as reduce (%left OP_GREATEROREQUAL).
    Conflict between rule 84 and token OP_AND resolved as reduce (OP_AND < OP_LESS).
    Conflict between rule 84 and token OP_OR resolved as reduce (OP_OR < OP_LESS).


State 174

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   86           | expression OP_LESSOREQUAL expression .  [KW_AND, KW_OR, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]
   87           | expression . OP_GREATEROREQUAL expression

    KW_MOD    shift, and go to state 128
    OP_PLUS   shift, and go to state 130
    OP_MINUS  shift, and go to state 131
    OP_MULT   shift, and go to state 132
    OP_DIV    shift, and go to state 133

    $default  reduce using rule 86 (expression)

    Conflict between rule 86 and token KW_AND resolved as reduce (KW_AND < OP_LESSOREQUAL).
    Conflict between rule 86 and token KW_MOD resolved as shift (OP_LESSOREQUAL < KW_MOD).
    Conflict between rule 86 and token KW_OR resolved as reduce (KW_OR < OP_LESSOREQUAL).
    Conflict between rule 86 and token OP_PLUS resolved as shift (OP_LESSOREQUAL < OP_PLUS).
    Conflict between rule 86 and token OP_MINUS resolved as shift (OP_LESSOREQUAL < OP_MINUS).
    Conflict between rule 86 and token OP_MULT resolved as shift (OP_LESSOREQUAL < OP_MULT).
    Conflict between rule 86 and token OP_DIV resolved as shift (OP_LESSOREQUAL < OP_DIV).
    Conflict between rule 86 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 86 and token OP_NOTEQUAL resolved as reduce (%left OP_NOTEQUAL).
    Conflict between rule 86 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 86 and token OP_LESSOREQUAL resolved as reduce (%left OP_LESSOREQUAL).
    Conflict between rule 86 and token OP_GREATER resolved as reduce (%left OP_GREATER).
    Conflict between rule 86 and token OP_GREATEROREQUAL resolved as reduce (%left OP_GREATEROREQUAL).
    Conflict between rule 86 and token OP_AND resolved as reduce (OP_AND < OP_LESSOREQUAL).
    Conflict between rule 86 and token OP_OR resolved as reduce (OP_OR < OP_LESSOREQUAL).


State 175

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   85           | expression OP_GREATER expression .  [KW_AND, KW_OR, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_MOD    shift, and go to state 128
    OP_PLUS   shift, and go to state 130
    OP_MINUS  shift, and go to state 131
    OP_MULT   shift, and go to state 132
    OP_DIV    shift, and go to state 133

    $default  reduce using rule 85 (expression)

    Conflict between rule 85 and token KW_AND resolved as reduce (KW_AND < OP_GREATER).
    Conflict between rule 85 and token KW_MOD resolved as shift (OP_GREATER < KW_MOD).
    Conflict between rule 85 and token KW_OR resolved as reduce (KW_OR < OP_GREATER).
    Conflict between rule 85 and token OP_PLUS resolved as shift (OP_GREATER < OP_PLUS).
    Conflict between rule 85 and token OP_MINUS resolved as shift (OP_GREATER < OP_MINUS).
    Conflict between rule 85 and token OP_MULT resolved as shift (OP_GREATER < OP_MULT).
    Conflict between rule 85 and token OP_DIV resolved as shift (OP_GREATER < OP_DIV).
    Conflict between rule 85 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 85 and token OP_NOTEQUAL resolved as reduce (%left OP_NOTEQUAL).
    Conflict between rule 85 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 85 and token OP_LESSOREQUAL resolved as reduce (%left OP_LESSOREQUAL).
    Conflict between rule 85 and token OP_GREATER resolved as reduce (%left OP_GREATER).
    Conflict between rule 85 and token OP_GREATEROREQUAL resolved as reduce (%left OP_GREATEROREQUAL).
    Conflict between rule 85 and token OP_AND resolved as reduce (OP_AND < OP_GREATER).
    Conflict between rule 85 and token OP_OR resolved as reduce (OP_OR < OP_GREATER).


State 176

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression
   87           | expression OP_GREATEROREQUAL expression .  [KW_AND, KW_OR, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]

    KW_MOD    shift, and go to state 128
    OP_PLUS   shift, and go to state 130
    OP_MINUS  shift, and go to state 131
    OP_MULT   shift, and go to state 132
    OP_DIV    shift, and go to state 133

    $default  reduce using rule 87 (expression)

    Conflict between rule 87 and token KW_AND resolved as reduce (KW_AND < OP_GREATEROREQUAL).
    Conflict between rule 87 and token KW_MOD resolved as shift (OP_GREATEROREQUAL < KW_MOD).
    Conflict between rule 87 and token KW_OR resolved as reduce (KW_OR < OP_GREATEROREQUAL).
    Conflict between rule 87 and token OP_PLUS resolved as shift (OP_GREATEROREQUAL < OP_PLUS).
    Conflict between rule 87 and token OP_MINUS resolved as shift (OP_GREATEROREQUAL < OP_MINUS).
    Conflict between rule 87 and token OP_MULT resolved as shift (OP_GREATEROREQUAL < OP_MULT).
    Conflict between rule 87 and token OP_DIV resolved as shift (OP_GREATEROREQUAL < OP_DIV).
    Conflict between rule 87 and token OP_EQUAL resolved as reduce (%left OP_EQUAL).
    Conflict between rule 87 and token OP_NOTEQUAL resolved as reduce (%left OP_NOTEQUAL).
    Conflict between rule 87 and token OP_LESS resolved as reduce (%left OP_LESS).
    Conflict between rule 87 and token OP_LESSOREQUAL resolved as reduce (%left OP_LESSOREQUAL).
    Conflict between rule 87 and token OP_GREATER resolved as reduce (%left OP_GREATER).
    Conflict between rule 87 and token OP_GREATEROREQUAL resolved as reduce (%left OP_GREATEROREQUAL).
    Conflict between rule 87 and token OP_AND resolved as reduce (OP_AND < OP_GREATEROREQUAL).
    Conflict between rule 87 and token OP_OR resolved as reduce (OP_OR < OP_GREATEROREQUAL).


State 177

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   80           | expression OP_AND expression .  [KW_AND, KW_OR, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_MOD             shift, and go to state 128
    OP_PLUS            shift, and go to state 130
    OP_MINUS           shift, and go to state 131
    OP_MULT            shift, and go to state 132
    OP_DIV             shift, and go to state 133
    OP_EQUAL           shift, and go to state 134
    OP_NOTEQUAL        shift, and go to state 135
    OP_LESS            shift, and go to state 136
    OP_LESSOREQUAL     shift, and go to state 137
    OP_GREATER         shift, and go to state 138
    OP_GREATEROREQUAL  shift, and go to state 139

    $default  reduce using rule 80 (expression)

    Conflict between rule 80 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 80 and token KW_MOD resolved as shift (OP_AND < KW_MOD).
    Conflict between rule 80 and token KW_OR resolved as reduce (KW_OR < OP_AND).
    Conflict between rule 80 and token OP_PLUS resolved as shift (OP_AND < OP_PLUS).
    Conflict between rule 80 and token OP_MINUS resolved as shift (OP_AND < OP_MINUS).
    Conflict between rule 80 and token OP_MULT resolved as shift (OP_AND < OP_MULT).
    Conflict between rule 80 and token OP_DIV resolved as shift (OP_AND < OP_DIV).
    Conflict between rule 80 and token OP_EQUAL resolved as shift (OP_AND < OP_EQUAL).
    Conflict between rule 80 and token OP_NOTEQUAL resolved as shift (OP_AND < OP_NOTEQUAL).
    Conflict between rule 80 and token OP_LESS resolved as shift (OP_AND < OP_LESS).
    Conflict between rule 80 and token OP_LESSOREQUAL resolved as shift (OP_AND < OP_LESSOREQUAL).
    Conflict between rule 80 and token OP_GREATER resolved as shift (OP_AND < OP_GREATER).
    Conflict between rule 80 and token OP_GREATEROREQUAL resolved as shift (OP_AND < OP_GREATEROREQUAL).
    Conflict between rule 80 and token OP_AND resolved as reduce (%left OP_AND).
    Conflict between rule 80 and token OP_OR resolved as reduce (OP_OR < OP_AND).


State 178

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   78           | expression OP_OR expression .  [KW_OR, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_OR]
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_AND             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    OP_PLUS            shift, and go to state 130
    OP_MINUS           shift, and go to state 131
    OP_MULT            shift, and go to state 132
    OP_DIV             shift, and go to state 133
    OP_EQUAL           shift, and go to state 134
    OP_NOTEQUAL        shift, and go to state 135
    OP_LESS            shift, and go to state 136
    OP_LESSOREQUAL     shift, and go to state 137
    OP_GREATER         shift, and go to state 138
    OP_GREATEROREQUAL  shift, and go to state 139
    OP_AND             shift, and go to state 141

    $default  reduce using rule 78 (expression)

    Conflict between rule 78 and token KW_AND resolved as shift (OP_OR < KW_AND).
    Conflict between rule 78 and token KW_MOD resolved as shift (OP_OR < KW_MOD).
    Conflict between rule 78 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 78 and token OP_PLUS resolved as shift (OP_OR < OP_PLUS).
    Conflict between rule 78 and token OP_MINUS resolved as shift (OP_OR < OP_MINUS).
    Conflict between rule 78 and token OP_MULT resolved as shift (OP_OR < OP_MULT).
    Conflict between rule 78 and token OP_DIV resolved as shift (OP_OR < OP_DIV).
    Conflict between rule 78 and token OP_EQUAL resolved as shift (OP_OR < OP_EQUAL).
    Conflict between rule 78 and token OP_NOTEQUAL resolved as shift (OP_OR < OP_NOTEQUAL).
    Conflict between rule 78 and token OP_LESS resolved as shift (OP_OR < OP_LESS).
    Conflict between rule 78 and token OP_LESSOREQUAL resolved as shift (OP_OR < OP_LESSOREQUAL).
    Conflict between rule 78 and token OP_GREATER resolved as shift (OP_OR < OP_GREATER).
    Conflict between rule 78 and token OP_GREATEROREQUAL resolved as shift (OP_OR < OP_GREATEROREQUAL).
    Conflict between rule 78 and token OP_AND resolved as shift (OP_OR < OP_AND).
    Conflict between rule 78 and token OP_OR resolved as reduce (%left OP_OR).


State 179

   42 command: . simple_command
   43        | . complex_command
   46 simple_command: . OP_SEMICOLON
   47               | . IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON
   48               | . command_if
   49               | . command_for
   50               | . command_while
   51               | . readString_command
   52               | . readInteger_command
   53               | . readReal_command
   54               | . writeString_command
   55               | . writeInteger_command
   56               | . writeReal_command
   57               | . KW_BREAK OP_SEMICOLON
   58               | . KW_CONTINUE OP_SEMICOLON
   59               | . KW_RETURN expression OP_SEMICOLON
   60               | . IDENTIFIER OP_LEFT_PARENTHESIS function_variables OP_RIGHT_PARENTHESIS OP_SEMICOLON
   61 complex_command: . KW_BEGIN comm2 KW_END
   62 command_if: . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   63           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command
   64           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE command
   65 command_for: . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   67 command_while: . KW_WHILE OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   67              | KW_WHILE OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS . command
   99 readString_command: . IDENTIFIER OP_ASSIGNMENT KW_READSTRING OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  100 readInteger_command: . IDENTIFIER OP_ASSIGNMENT KW_READINTEGER OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  101 readReal_command: . IDENTIFIER OP_ASSIGNMENT KW_READREAL OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  102 writeString_command: . KW_WRITESTRING OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON
  103                    | . KW_WRITESTRING OP_LEFT_PARENTHESIS CONSTANT_STRING OP_RIGHT_PARENTHESIS OP_SEMICOLON
  104 writeInteger_command: . KW_WRITEINTEGER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS OP_SEMICOLON
  105 writeReal_command: . KW_WRITEREAL OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON

    KW_IF            shift, and go to state 46
    KW_BREAK         shift, and go to state 47
    KW_CONTINUE      shift, and go to state 48
    KW_FOR           shift, and go to state 49
    KW_RETURN        shift, and go to state 50
    KW_BEGIN         shift, and go to state 192
    KW_WHILE         shift, and go to state 51
    KW_WRITESTRING   shift, and go to state 52
    KW_WRITEINTEGER  shift, and go to state 53
    KW_WRITEREAL     shift, and go to state 54
    IDENTIFIER       shift, and go to state 55
    OP_SEMICOLON     shift, and go to state 56

    command               go to state 200
    simple_command        go to state 195
    complex_command       go to state 196
    command_if            go to state 59
    command_for           go to state 60
    command_while         go to state 61
    readString_command    go to state 62
    readInteger_command   go to state 63
    readReal_command      go to state 64
    writeString_command   go to state 65
    writeInteger_command  go to state 66
    writeReal_command     go to state 67


State 180

  102 writeString_command: KW_WRITESTRING OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS . OP_SEMICOLON

    OP_SEMICOLON  shift, and go to state 201


State 181

  103 writeString_command: KW_WRITESTRING OP_LEFT_PARENTHESIS CONSTANT_STRING OP_RIGHT_PARENTHESIS . OP_SEMICOLON

    OP_SEMICOLON  shift, and go to state 202


State 182

  104 writeInteger_command: KW_WRITEINTEGER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS . OP_SEMICOLON

    OP_SEMICOLON  shift, and go to state 203


State 183

  105 writeReal_command: KW_WRITEREAL OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS . OP_SEMICOLON

    OP_SEMICOLON  shift, and go to state 204


State 184

   99 readString_command: IDENTIFIER OP_ASSIGNMENT KW_READSTRING OP_LEFT_PARENTHESIS . OP_RIGHT_PARENTHESIS OP_SEMICOLON

    OP_RIGHT_PARENTHESIS  shift, and go to state 205


State 185

  100 readInteger_command: IDENTIFIER OP_ASSIGNMENT KW_READINTEGER OP_LEFT_PARENTHESIS . OP_RIGHT_PARENTHESIS OP_SEMICOLON

    OP_RIGHT_PARENTHESIS  shift, and go to state 206


State 186

  101 readReal_command: IDENTIFIER OP_ASSIGNMENT KW_READREAL OP_LEFT_PARENTHESIS . OP_RIGHT_PARENTHESIS OP_SEMICOLON

    OP_RIGHT_PARENTHESIS  shift, and go to state 207


State 187

   47 simple_command: IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON .

    $default  reduce using rule 47 (simple_command)


State 188

   60 simple_command: IDENTIFIER OP_LEFT_PARENTHESIS function_variables OP_RIGHT_PARENTHESIS . OP_SEMICOLON

    OP_SEMICOLON  shift, and go to state 208


State 189

   68 function_variables: . %empty  [OP_RIGHT_PARENTHESIS]
   69                   | . constant
   70                   | . constant OP_COMMA function_variables
   70                   | constant OP_COMMA . function_variables
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    IDENTIFIER   shift, and go to state 152
    POSITIVEINT  shift, and go to state 91
    REAL         shift, and go to state 92

    $default  reduce using rule 68 (function_variables)

    function_variables  go to state 209
    constant            go to state 154


State 190

   20 func_data_types: func_data_types OP_COMMA IDENTIFIER OP_ASSIGNMENT sinplin . const
   38 const: . REAL
   39      | . POSITIVEINT
   40      | . KW_TRUE
   41      | . KW_FALSE

    KW_TRUE      shift, and go to state 109
    KW_FALSE     shift, and go to state 110
    POSITIVEINT  shift, and go to state 111
    REAL         shift, and go to state 112

    const  go to state 210


State 191

   19 func_data_types: basic_data_type IDENTIFIER OP_ASSIGNMENT sinplin const .

    $default  reduce using rule 19 (func_data_types)


State 192

   44 comm2: . %empty  [KW_END]
   45      | . simple_command comm2
   46 simple_command: . OP_SEMICOLON
   47               | . IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON
   48               | . command_if
   49               | . command_for
   50               | . command_while
   51               | . readString_command
   52               | . readInteger_command
   53               | . readReal_command
   54               | . writeString_command
   55               | . writeInteger_command
   56               | . writeReal_command
   57               | . KW_BREAK OP_SEMICOLON
   58               | . KW_CONTINUE OP_SEMICOLON
   59               | . KW_RETURN expression OP_SEMICOLON
   60               | . IDENTIFIER OP_LEFT_PARENTHESIS function_variables OP_RIGHT_PARENTHESIS OP_SEMICOLON
   61 complex_command: KW_BEGIN . comm2 KW_END
   62 command_if: . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   63           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command
   64           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE command
   65 command_for: . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   67 command_while: . KW_WHILE OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   99 readString_command: . IDENTIFIER OP_ASSIGNMENT KW_READSTRING OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  100 readInteger_command: . IDENTIFIER OP_ASSIGNMENT KW_READINTEGER OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  101 readReal_command: . IDENTIFIER OP_ASSIGNMENT KW_READREAL OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  102 writeString_command: . KW_WRITESTRING OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON
  103                    | . KW_WRITESTRING OP_LEFT_PARENTHESIS CONSTANT_STRING OP_RIGHT_PARENTHESIS OP_SEMICOLON
  104 writeInteger_command: . KW_WRITEINTEGER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS OP_SEMICOLON
  105 writeReal_command: . KW_WRITEREAL OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON

    KW_IF            shift, and go to state 46
    KW_BREAK         shift, and go to state 47
    KW_CONTINUE      shift, and go to state 48
    KW_FOR           shift, and go to state 49
    KW_RETURN        shift, and go to state 50
    KW_WHILE         shift, and go to state 51
    KW_WRITESTRING   shift, and go to state 52
    KW_WRITEINTEGER  shift, and go to state 53
    KW_WRITEREAL     shift, and go to state 54
    IDENTIFIER       shift, and go to state 55
    OP_SEMICOLON     shift, and go to state 56

    $default  reduce using rule 44 (comm2)

    comm2                 go to state 211
    simple_command        go to state 58
    command_if            go to state 59
    command_for           go to state 60
    command_while         go to state 61
    readString_command    go to state 62
    readInteger_command   go to state 63
    readReal_command      go to state 64
    writeString_command   go to state 65
    writeInteger_command  go to state 66
    writeReal_command     go to state 67


State 193

   42 command: . simple_command
   43        | . complex_command
   46 simple_command: . OP_SEMICOLON
   47               | . IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON
   48               | . command_if
   49               | . command_for
   50               | . command_while
   51               | . readString_command
   52               | . readInteger_command
   53               | . readReal_command
   54               | . writeString_command
   55               | . writeInteger_command
   56               | . writeReal_command
   57               | . KW_BREAK OP_SEMICOLON
   58               | . KW_CONTINUE OP_SEMICOLON
   59               | . KW_RETURN expression OP_SEMICOLON
   60               | . IDENTIFIER OP_LEFT_PARENTHESIS function_variables OP_RIGHT_PARENTHESIS OP_SEMICOLON
   61 complex_command: . KW_BEGIN comm2 KW_END
   62 command_if: . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   63           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command
   63           | KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN . command
   64           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE command
   64           | KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN . command KW_ELSE command
   65 command_for: . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   67 command_while: . KW_WHILE OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   99 readString_command: . IDENTIFIER OP_ASSIGNMENT KW_READSTRING OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  100 readInteger_command: . IDENTIFIER OP_ASSIGNMENT KW_READINTEGER OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  101 readReal_command: . IDENTIFIER OP_ASSIGNMENT KW_READREAL OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  102 writeString_command: . KW_WRITESTRING OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON
  103                    | . KW_WRITESTRING OP_LEFT_PARENTHESIS CONSTANT_STRING OP_RIGHT_PARENTHESIS OP_SEMICOLON
  104 writeInteger_command: . KW_WRITEINTEGER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS OP_SEMICOLON
  105 writeReal_command: . KW_WRITEREAL OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON

    KW_IF            shift, and go to state 46
    KW_BREAK         shift, and go to state 47
    KW_CONTINUE      shift, and go to state 48
    KW_FOR           shift, and go to state 49
    KW_RETURN        shift, and go to state 50
    KW_BEGIN         shift, and go to state 192
    KW_WHILE         shift, and go to state 51
    KW_WRITESTRING   shift, and go to state 52
    KW_WRITEINTEGER  shift, and go to state 53
    KW_WRITEREAL     shift, and go to state 54
    IDENTIFIER       shift, and go to state 55
    OP_SEMICOLON     shift, and go to state 56

    command               go to state 212
    simple_command        go to state 195
    complex_command       go to state 196
    command_if            go to state 59
    command_for           go to state 60
    command_while         go to state 61
    readString_command    go to state 62
    readInteger_command   go to state 63
    readReal_command      go to state 64
    writeString_command   go to state 65
    writeInteger_command  go to state 66
    writeReal_command     go to state 67


State 194

   62 command_if: KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command .

    $default  reduce using rule 62 (command_if)


State 195

   42 command: simple_command .

    $default  reduce using rule 42 (command)


State 196

   43 command: complex_command .

    $default  reduce using rule 43 (command)


State 197

   65 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression . OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression . OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_AND             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    KW_OR              shift, and go to state 129
    OP_PLUS            shift, and go to state 130
    OP_MINUS           shift, and go to state 131
    OP_MULT            shift, and go to state 132
    OP_DIV             shift, and go to state 133
    OP_EQUAL           shift, and go to state 134
    OP_NOTEQUAL        shift, and go to state 135
    OP_LESS            shift, and go to state 136
    OP_LESSOREQUAL     shift, and go to state 137
    OP_GREATER         shift, and go to state 138
    OP_GREATEROREQUAL  shift, and go to state 139
    OP_SEMICOLON       shift, and go to state 213
    OP_AND             shift, and go to state 141
    OP_OR              shift, and go to state 142


State 198

   90 expression: IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS .

    $default  reduce using rule 90 (expression)


State 199

   91 expression: IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET . multi_exp_bracket
   94 multi_exp_bracket: . %empty  [KW_AND, KW_MOD, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]
   95                  | . OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket

    OP_LEFT_BRACKET  shift, and go to state 214

    $default  reduce using rule 94 (multi_exp_bracket)

    multi_exp_bracket  go to state 215


State 200

   67 command_while: KW_WHILE OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command .

    $default  reduce using rule 67 (command_while)


State 201

  102 writeString_command: KW_WRITESTRING OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON .

    $default  reduce using rule 102 (writeString_command)


State 202

  103 writeString_command: KW_WRITESTRING OP_LEFT_PARENTHESIS CONSTANT_STRING OP_RIGHT_PARENTHESIS OP_SEMICOLON .

    $default  reduce using rule 103 (writeString_command)


State 203

  104 writeInteger_command: KW_WRITEINTEGER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS OP_SEMICOLON .

    $default  reduce using rule 104 (writeInteger_command)


State 204

  105 writeReal_command: KW_WRITEREAL OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON .

    $default  reduce using rule 105 (writeReal_command)


State 205

   99 readString_command: IDENTIFIER OP_ASSIGNMENT KW_READSTRING OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS . OP_SEMICOLON

    OP_SEMICOLON  shift, and go to state 216


State 206

  100 readInteger_command: IDENTIFIER OP_ASSIGNMENT KW_READINTEGER OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS . OP_SEMICOLON

    OP_SEMICOLON  shift, and go to state 217


State 207

  101 readReal_command: IDENTIFIER OP_ASSIGNMENT KW_READREAL OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS . OP_SEMICOLON

    OP_SEMICOLON  shift, and go to state 218


State 208

   60 simple_command: IDENTIFIER OP_LEFT_PARENTHESIS function_variables OP_RIGHT_PARENTHESIS OP_SEMICOLON .

    $default  reduce using rule 60 (simple_command)


State 209

   70 function_variables: constant OP_COMMA function_variables .

    $default  reduce using rule 70 (function_variables)


State 210

   20 func_data_types: func_data_types OP_COMMA IDENTIFIER OP_ASSIGNMENT sinplin const .

    $default  reduce using rule 20 (func_data_types)


State 211

   61 complex_command: KW_BEGIN comm2 . KW_END

    KW_END  shift, and go to state 219


State 212

   63 command_if: KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command .  [KW_IF, KW_BREAK, KW_CONTINUE, KW_FOR, KW_RETURN, KW_END, KW_WHILE, KW_WRITESTRING, KW_WRITEINTEGER, KW_WRITEREAL, IDENTIFIER, OP_SEMICOLON]
   64           | KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command . KW_ELSE command

    KW_ELSE  shift, and go to state 220

    $default  reduce using rule 63 (command_if)

    Conflict between rule 63 and token KW_ELSE resolved as shift (%right KW_ELSE).


State 213

   65 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON . expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON . IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 221
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 222
    constant    go to state 97


State 214

   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   95 multi_exp_bracket: OP_LEFT_BRACKET . expression OP_RIGHT_BRACKET multi_exp_bracket
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 223
    constant    go to state 97


State 215

   91 expression: IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket .

    $default  reduce using rule 91 (expression)


State 216

   99 readString_command: IDENTIFIER OP_ASSIGNMENT KW_READSTRING OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON .

    $default  reduce using rule 99 (readString_command)


State 217

  100 readInteger_command: IDENTIFIER OP_ASSIGNMENT KW_READINTEGER OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON .

    $default  reduce using rule 100 (readInteger_command)


State 218

  101 readReal_command: IDENTIFIER OP_ASSIGNMENT KW_READREAL OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON .

    $default  reduce using rule 101 (readReal_command)


State 219

   61 complex_command: KW_BEGIN comm2 KW_END .

    $default  reduce using rule 61 (complex_command)


State 220

   42 command: . simple_command
   43        | . complex_command
   46 simple_command: . OP_SEMICOLON
   47               | . IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON
   48               | . command_if
   49               | . command_for
   50               | . command_while
   51               | . readString_command
   52               | . readInteger_command
   53               | . readReal_command
   54               | . writeString_command
   55               | . writeInteger_command
   56               | . writeReal_command
   57               | . KW_BREAK OP_SEMICOLON
   58               | . KW_CONTINUE OP_SEMICOLON
   59               | . KW_RETURN expression OP_SEMICOLON
   60               | . IDENTIFIER OP_LEFT_PARENTHESIS function_variables OP_RIGHT_PARENTHESIS OP_SEMICOLON
   61 complex_command: . KW_BEGIN comm2 KW_END
   62 command_if: . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   63           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command
   64           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE command
   64           | KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE . command
   65 command_for: . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   67 command_while: . KW_WHILE OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   99 readString_command: . IDENTIFIER OP_ASSIGNMENT KW_READSTRING OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  100 readInteger_command: . IDENTIFIER OP_ASSIGNMENT KW_READINTEGER OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  101 readReal_command: . IDENTIFIER OP_ASSIGNMENT KW_READREAL OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  102 writeString_command: . KW_WRITESTRING OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON
  103                    | . KW_WRITESTRING OP_LEFT_PARENTHESIS CONSTANT_STRING OP_RIGHT_PARENTHESIS OP_SEMICOLON
  104 writeInteger_command: . KW_WRITEINTEGER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS OP_SEMICOLON
  105 writeReal_command: . KW_WRITEREAL OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON

    KW_IF            shift, and go to state 46
    KW_BREAK         shift, and go to state 47
    KW_CONTINUE      shift, and go to state 48
    KW_FOR           shift, and go to state 49
    KW_RETURN        shift, and go to state 50
    KW_BEGIN         shift, and go to state 192
    KW_WHILE         shift, and go to state 51
    KW_WRITESTRING   shift, and go to state 52
    KW_WRITEINTEGER  shift, and go to state 53
    KW_WRITEREAL     shift, and go to state 54
    IDENTIFIER       shift, and go to state 55
    OP_SEMICOLON     shift, and go to state 56

    command               go to state 224
    simple_command        go to state 195
    complex_command       go to state 196
    command_if            go to state 59
    command_for           go to state 60
    command_while         go to state 61
    readString_command    go to state 62
    readInteger_command   go to state 63
    readReal_command      go to state 64
    writeString_command   go to state 65
    writeInteger_command  go to state 66
    writeReal_command     go to state 67


State 221

   66 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER . OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   90 expression: IDENTIFIER . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | IDENTIFIER . OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   98 constant: IDENTIFIER .  [KW_AND, KW_MOD, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_AND, OP_OR]

    OP_ASSIGNMENT        shift, and go to state 225
    OP_LEFT_PARENTHESIS  shift, and go to state 122
    OP_LEFT_BRACKET      shift, and go to state 123

    $default  reduce using rule 98 (constant)


State 222

   65 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression . OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_AND             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    KW_OR              shift, and go to state 129
    OP_PLUS            shift, and go to state 130
    OP_MINUS           shift, and go to state 131
    OP_MULT            shift, and go to state 132
    OP_DIV             shift, and go to state 133
    OP_EQUAL           shift, and go to state 134
    OP_NOTEQUAL        shift, and go to state 135
    OP_LESS            shift, and go to state 136
    OP_LESSOREQUAL     shift, and go to state 137
    OP_GREATER         shift, and go to state 138
    OP_GREATEROREQUAL  shift, and go to state 139
    OP_SEMICOLON       shift, and go to state 226
    OP_AND             shift, and go to state 141
    OP_OR              shift, and go to state 142


State 223

   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression
   95 multi_exp_bracket: OP_LEFT_BRACKET expression . OP_RIGHT_BRACKET multi_exp_bracket

    KW_AND             shift, and go to state 127
    KW_MOD             shift, and go to state 128
    KW_OR              shift, and go to state 129
    OP_PLUS            shift, and go to state 130
    OP_MINUS           shift, and go to state 131
    OP_MULT            shift, and go to state 132
    OP_DIV             shift, and go to state 133
    OP_EQUAL           shift, and go to state 134
    OP_NOTEQUAL        shift, and go to state 135
    OP_LESS            shift, and go to state 136
    OP_LESSOREQUAL     shift, and go to state 137
    OP_GREATER         shift, and go to state 138
    OP_GREATEROREQUAL  shift, and go to state 139
    OP_RIGHT_BRACKET   shift, and go to state 227
    OP_AND             shift, and go to state 141
    OP_OR              shift, and go to state 142


State 224

   64 command_if: KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE command .

    $default  reduce using rule 64 (command_if)


State 225

   66 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT . expression OP_RIGHT_PARENTHESIS command
   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 228
    constant    go to state 97


State 226

   65 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON . IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command

    IDENTIFIER  shift, and go to state 229


State 227

   94 multi_exp_bracket: . %empty  [KW_AND, KW_MOD, KW_OR, OP_PLUS, OP_MINUS, OP_MULT, OP_DIV, OP_EQUAL, OP_NOTEQUAL, OP_LESS, OP_LESSOREQUAL, OP_GREATER, OP_GREATEROREQUAL, OP_SEMICOLON, OP_RIGHT_PARENTHESIS, OP_RIGHT_BRACKET, OP_AND, OP_OR]
   95                  | . OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   95                  | OP_LEFT_BRACKET expression OP_RIGHT_BRACKET . multi_exp_bracket

    OP_LEFT_BRACKET  shift, and go to state 214

    $default  reduce using rule 94 (multi_exp_bracket)

    multi_exp_bracket  go to state 230


State 228

   66 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression . OP_RIGHT_PARENTHESIS command
   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_AND                shift, and go to state 127
    KW_MOD                shift, and go to state 128
    KW_OR                 shift, and go to state 129
    OP_PLUS               shift, and go to state 130
    OP_MINUS              shift, and go to state 131
    OP_MULT               shift, and go to state 132
    OP_DIV                shift, and go to state 133
    OP_EQUAL              shift, and go to state 134
    OP_NOTEQUAL           shift, and go to state 135
    OP_LESS               shift, and go to state 136
    OP_LESSOREQUAL        shift, and go to state 137
    OP_GREATER            shift, and go to state 138
    OP_GREATEROREQUAL     shift, and go to state 139
    OP_RIGHT_PARENTHESIS  shift, and go to state 231
    OP_AND                shift, and go to state 141
    OP_OR                 shift, and go to state 142


State 229

   65 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER . OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command

    OP_ASSIGNMENT  shift, and go to state 232


State 230

   95 multi_exp_bracket: OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket .

    $default  reduce using rule 95 (multi_exp_bracket)


State 231

   42 command: . simple_command
   43        | . complex_command
   46 simple_command: . OP_SEMICOLON
   47               | . IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON
   48               | . command_if
   49               | . command_for
   50               | . command_while
   51               | . readString_command
   52               | . readInteger_command
   53               | . readReal_command
   54               | . writeString_command
   55               | . writeInteger_command
   56               | . writeReal_command
   57               | . KW_BREAK OP_SEMICOLON
   58               | . KW_CONTINUE OP_SEMICOLON
   59               | . KW_RETURN expression OP_SEMICOLON
   60               | . IDENTIFIER OP_LEFT_PARENTHESIS function_variables OP_RIGHT_PARENTHESIS OP_SEMICOLON
   61 complex_command: . KW_BEGIN comm2 KW_END
   62 command_if: . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   63           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command
   64           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE command
   65 command_for: . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   66            | KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS . command
   67 command_while: . KW_WHILE OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   99 readString_command: . IDENTIFIER OP_ASSIGNMENT KW_READSTRING OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  100 readInteger_command: . IDENTIFIER OP_ASSIGNMENT KW_READINTEGER OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  101 readReal_command: . IDENTIFIER OP_ASSIGNMENT KW_READREAL OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  102 writeString_command: . KW_WRITESTRING OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON
  103                    | . KW_WRITESTRING OP_LEFT_PARENTHESIS CONSTANT_STRING OP_RIGHT_PARENTHESIS OP_SEMICOLON
  104 writeInteger_command: . KW_WRITEINTEGER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS OP_SEMICOLON
  105 writeReal_command: . KW_WRITEREAL OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON

    KW_IF            shift, and go to state 46
    KW_BREAK         shift, and go to state 47
    KW_CONTINUE      shift, and go to state 48
    KW_FOR           shift, and go to state 49
    KW_RETURN        shift, and go to state 50
    KW_BEGIN         shift, and go to state 192
    KW_WHILE         shift, and go to state 51
    KW_WRITESTRING   shift, and go to state 52
    KW_WRITEINTEGER  shift, and go to state 53
    KW_WRITEREAL     shift, and go to state 54
    IDENTIFIER       shift, and go to state 55
    OP_SEMICOLON     shift, and go to state 56

    command               go to state 233
    simple_command        go to state 195
    complex_command       go to state 196
    command_if            go to state 59
    command_for           go to state 60
    command_while         go to state 61
    readString_command    go to state 62
    readInteger_command   go to state 63
    readReal_command      go to state 64
    writeString_command   go to state 65
    writeInteger_command  go to state 66
    writeReal_command     go to state 67


State 232

   65 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT . expression OP_RIGHT_PARENTHESIS command
   71 expression: . constant
   72           | . OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   73           | . expression OP_PLUS expression
   74           | . expression OP_MINUS expression
   75           | . expression OP_MULT expression
   76           | . expression OP_DIV expression
   77           | . expression KW_MOD expression
   78           | . expression OP_OR expression
   79           | . expression KW_OR expression
   80           | . expression OP_AND expression
   81           | . expression KW_AND expression
   82           | . expression OP_EQUAL expression
   83           | . expression OP_NOTEQUAL expression
   84           | . expression OP_LESS expression
   85           | . expression OP_GREATER expression
   86           | . expression OP_LESSOREQUAL expression
   87           | . expression OP_GREATEROREQUAL expression
   88           | . OP_PLUS expression
   89           | . OP_MINUS expression
   90           | . IDENTIFIER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS
   91           | . IDENTIFIER OP_LEFT_BRACKET expression OP_RIGHT_BRACKET multi_exp_bracket
   92           | . KW_TRUE
   93           | . KW_FALSE
   96 constant: . POSITIVEINT
   97         | . REAL
   98         | . IDENTIFIER

    KW_TRUE              shift, and go to state 88
    KW_FALSE             shift, and go to state 89
    IDENTIFIER           shift, and go to state 90
    POSITIVEINT          shift, and go to state 91
    REAL                 shift, and go to state 92
    OP_PLUS              shift, and go to state 93
    OP_MINUS             shift, and go to state 94
    OP_LEFT_PARENTHESIS  shift, and go to state 95

    expression  go to state 234
    constant    go to state 97


State 233

   66 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command .

    $default  reduce using rule 66 (command_for)


State 234

   65 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression . OP_RIGHT_PARENTHESIS command
   73 expression: expression . OP_PLUS expression
   74           | expression . OP_MINUS expression
   75           | expression . OP_MULT expression
   76           | expression . OP_DIV expression
   77           | expression . KW_MOD expression
   78           | expression . OP_OR expression
   79           | expression . KW_OR expression
   80           | expression . OP_AND expression
   81           | expression . KW_AND expression
   82           | expression . OP_EQUAL expression
   83           | expression . OP_NOTEQUAL expression
   84           | expression . OP_LESS expression
   85           | expression . OP_GREATER expression
   86           | expression . OP_LESSOREQUAL expression
   87           | expression . OP_GREATEROREQUAL expression

    KW_AND                shift, and go to state 127
    KW_MOD                shift, and go to state 128
    KW_OR                 shift, and go to state 129
    OP_PLUS               shift, and go to state 130
    OP_MINUS              shift, and go to state 131
    OP_MULT               shift, and go to state 132
    OP_DIV                shift, and go to state 133
    OP_EQUAL              shift, and go to state 134
    OP_NOTEQUAL           shift, and go to state 135
    OP_LESS               shift, and go to state 136
    OP_LESSOREQUAL        shift, and go to state 137
    OP_GREATER            shift, and go to state 138
    OP_GREATEROREQUAL     shift, and go to state 139
    OP_RIGHT_PARENTHESIS  shift, and go to state 235
    OP_AND                shift, and go to state 141
    OP_OR                 shift, and go to state 142


State 235

   42 command: . simple_command
   43        | . complex_command
   46 simple_command: . OP_SEMICOLON
   47               | . IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON
   48               | . command_if
   49               | . command_for
   50               | . command_while
   51               | . readString_command
   52               | . readInteger_command
   53               | . readReal_command
   54               | . writeString_command
   55               | . writeInteger_command
   56               | . writeReal_command
   57               | . KW_BREAK OP_SEMICOLON
   58               | . KW_CONTINUE OP_SEMICOLON
   59               | . KW_RETURN expression OP_SEMICOLON
   60               | . IDENTIFIER OP_LEFT_PARENTHESIS function_variables OP_RIGHT_PARENTHESIS OP_SEMICOLON
   61 complex_command: . KW_BEGIN comm2 KW_END
   62 command_if: . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   63           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command
   64           | . KW_IF OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS KW_THEN command KW_ELSE command
   65 command_for: . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   65            | KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS . command
   66            | . KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command
   67 command_while: . KW_WHILE OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS command
   99 readString_command: . IDENTIFIER OP_ASSIGNMENT KW_READSTRING OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  100 readInteger_command: . IDENTIFIER OP_ASSIGNMENT KW_READINTEGER OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  101 readReal_command: . IDENTIFIER OP_ASSIGNMENT KW_READREAL OP_LEFT_PARENTHESIS OP_RIGHT_PARENTHESIS OP_SEMICOLON
  102 writeString_command: . KW_WRITESTRING OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON
  103                    | . KW_WRITESTRING OP_LEFT_PARENTHESIS CONSTANT_STRING OP_RIGHT_PARENTHESIS OP_SEMICOLON
  104 writeInteger_command: . KW_WRITEINTEGER OP_LEFT_PARENTHESIS expression OP_RIGHT_PARENTHESIS OP_SEMICOLON
  105 writeReal_command: . KW_WRITEREAL OP_LEFT_PARENTHESIS IDENTIFIER OP_RIGHT_PARENTHESIS OP_SEMICOLON

    KW_IF            shift, and go to state 46
    KW_BREAK         shift, and go to state 47
    KW_CONTINUE      shift, and go to state 48
    KW_FOR           shift, and go to state 49
    KW_RETURN        shift, and go to state 50
    KW_BEGIN         shift, and go to state 192
    KW_WHILE         shift, and go to state 51
    KW_WRITESTRING   shift, and go to state 52
    KW_WRITEINTEGER  shift, and go to state 53
    KW_WRITEREAL     shift, and go to state 54
    IDENTIFIER       shift, and go to state 55
    OP_SEMICOLON     shift, and go to state 56

    command               go to state 236
    simple_command        go to state 195
    complex_command       go to state 196
    command_if            go to state 59
    command_for           go to state 60
    command_while         go to state 61
    readString_command    go to state 62
    readInteger_command   go to state 63
    readReal_command      go to state 64
    writeString_command   go to state 65
    writeInteger_command  go to state 66
    writeReal_command     go to state 67


State 236

   65 command_for: KW_FOR OP_LEFT_PARENTHESIS IDENTIFIER OP_ASSIGNMENT expression OP_SEMICOLON expression OP_SEMICOLON IDENTIFIER OP_ASSIGNMENT expression OP_RIGHT_PARENTHESIS command .

    $default  reduce using rule 65 (command_for)
